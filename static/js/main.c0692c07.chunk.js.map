{"version":3,"sources":["images/bom-logo.png","service/BomService.ts","util/InputValidator.ts","util/gapi-wrapper.ts","context/AuthContext.tsx","route/AuthenticatedRoute.js","route/UnauthenticatedRoute.tsx","util/Themes.ts","screens/Login.tsx","components/business/BusinessTable.tsx","components/SearchBar.tsx","screens/Businesses.tsx","screens/Users.tsx","screens/Newsfeed.tsx","components/ValidatableInput.tsx","components/AutocompleteMultiSelect.tsx","screens/SyncBusinesses.tsx","components/business/BusinessInfo.tsx","components/business/BusinessSocialMedia.tsx","components/business/BusinessImages.tsx","util/GeneralUtils.ts","screens/AddBusiness.tsx","screens/AddNewsfeedEntry.tsx","components/sync/UploadWordpressExport.tsx","components/sync/ErrorCorrection.tsx","components/sync/ConfirmUpload.tsx","components/EllipsizedTextContainer.tsx","fieldMapping/MappingTarget.tsx","fieldMapping/MappingSource.tsx","fieldMapping/FieldMapper.tsx","util/BusinessValidator.tsx","Routes.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","cached","ValidationType","BomService","idToken","baseUrl","this","makeRequest","buildUrl","useCache","params","limit","id","method","Array","Set","fetchServices","flatMap","b","categories","from","sort","location","businesses","body","JSON","stringify","entries","excel","content","service","users","url","options","headers","authorization","fetch","response","json","status","ApiError","path","Path","qString","Object","keys","filter","key","map","encodeURI","join","Error","INITIALIZED","getAuthInstance","window","gapi","auth2","AuthContext","React","createContext","undefined","getTokenFromAuthInstance","authInstance","currentUser","get","id_token","AuthProvider","props","useState","authenticated","setAuthenticated","authorizing","setAuthorizing","userCredentials","setUserCredentials","userRole","setUserRole","adminServices","setAdminServices","handleLogin","tokens","a","console","log","Date","toLocaleString","bomService","err","handleLoginError","useEffect","Promise","resolve","reject","load","client","init","clientId","discoveryDocs","scope","then","catch","GAPI","isSignedIn","listen","signedIn","Provider","value","signOut","signIn","prompt","children","Component","component","allowedRoles","rest","context","useContext","render","length","includes","to","pathname","state","noRedirect","StyleConstants","background","cardBackground","text","divider","lightGray","gray","darkGray","lightAccent","darkAccent","font","altAccent","lightRed","createStyles","makeStyles","root","height","width","backgroundColor","wrapper","paddingTop","display","alignItems","justifyContent","card","margin","labelWrapper","marginTop","marginBottom","color","authContext","classes","className","alt","src","require","CircularProgress","size","Button","disabled","variant","onClick","small","useMediaQuery","useTheme","breakpoints","down","TableContainer","Paper","style","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","business","cursor","hover","onSelectBusiness","name","lastModified","useStyles","maxWidth","input","marginLeft","flex","icon","searchText","setSearchText","rootStyles","onSubmit","event","preventDefault","Grid","container","spacing","item","TextField","label","onChange","target","theme","maxHeight","header","flexDirection","history","useHistory","setBusinesses","loading","setLoading","rowsPerPage","setRowsPerPage","page","setPage","pageIndexes","setPageIndexes","totalCount","setTotalCount","query","setQuery","orderBy","startAfter","toLowerCase","nameLower","results","error","finally","debouncedSearch","AwesomeDebouncePromise","q","SearchBar","push","BusinessTable","TablePagination","backIconButtonProps","nextIconButtonProps","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Backdrop","zIndex","open","AddUserDialog","dialogOpen","setDialogOpen","addUser","user","setUser","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","ev","autoFocus","type","fullWidth","DialogActions","DeleteUserDialog","deleteUser","addUserContainer","table","UserTable","email","valid","toLocaleDateString","IconButton","onDelete","RemoveCircleOutline","setUsers","addUserDialogOpen","setAddUserDialogOpen","deleteUserDialogOpen","setDeleteUserDialogOpen","refreshCounter","setRefreshCounter","selectedUser","setSelectedUser","fetchUsers","putUsers","addButtonContainer","padding","cardContainer","transition","setEntries","selectedEntry","setSelectedEntry","refreshEntries","fetchFeed","direction","feed","entry","Card","raised","CardHeader","title","stopPropagation","subheader","date","imageUrl","CardMedia","image","subtitle","CardContent","Typography","deleteFeedEntry","onUpdate","validator","setError","helperText","setHelperText","validate","failureText","required","autoComplete","onBlur","createFilterOptions","values","Autocomplete","multiple","freeSolo","newValue","getOptionLabel","option","renderInput","ValidatableInput","minWidth","inputLabel","placeholder","inputClass","InputProps","endAdornment","Fragment","filterOptions","filtered","inputValue","ActiveStep","REGEXES","Email","createValidator","validations","validationType","Required","isArray","failureType","every","s","test","handleValidation","inputContainer","paddingLeft","paddingRight","setBusiness","locationsLoading","setLocationsLoading","categoriesLoading","setCategoriesLoading","locations","setLocations","setCategories","valids","setValids","fetchCategories","cats","fetchLocations","locs","onValidation","reduce","prev","curr","xs","md","editing","AutocompleteMultiSelect","address","description","rows","multiline","phoneNumber","inputWrapper","SocialMediaTypeObj","facebook","twitter","instagram","pinterest","patreon","soundcloud","youtube","bandcamp","fanlink","linktree","spotify","appleMusic","songLink","meetup","AddSocialMediaRow","FormControl","InputLabel","Select","labelId","onSelect","bussiness","socialMedia","MenuItem","hidden","marginRight","onCancel","CancelOutlined","addingValue","setAddingValue","copy","newValids","gridRowGap","logoUrl","bannerUrl","shouldDeleteCleanedValue","cleanEmptyStrings","obj","shouldClean","testString","val","trim","badIndexes","forEach","index","ValueTypeConst","footer","buttonContainer","contentContainer","backButton","instructions","activeStep","setActiveStep","setValid","confirmDeleteDialogOpen","setConfirmDeleteDialogOpen","steps","Stepper","alternativeLabel","Step","StepLabel","BusinessInfo","BusinessSocialMedia","BusinessImages","getContent","goBack","prevActiveStep","uploadBusinesses","deleteBusiness","select","grid","now","setEntry","businessNames","setBusinessNames","updatedValids","articleType","trackId","selectedBusiness","serviceName","htmlContent","fetchArticle","e","lg","DateTimePicker","getTime","showTodayButton","v","shareUrl","dangerouslySetInnerHTML","__html","toUpload","uploadNewsfeedEntries","some","DragAndDrop","useDropzone","onDrop","handleDrop","getRootProps","getInputProps","isDragActive","opacity","selectedFile","selectedTab","setSelectedTab","TabContext","toString","AppBar","position","TabList","centered","Tab","TabPanel","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","fontSize","Divider","AccordionDetails","List","ListItem","ListItemText","href","files","file","setSelectedFile","CategoriesInput","split","message","ContextAwareInput","detailsHeader","detailLabel","details","isEdited","setIsEdited","elevation","errors","onReset","onSave","unresolvedCount","WebkitLineClamp","lineCount","overflow","textOverflow","WebkitBoxOrient","containerStyle","MappingTarget","onRemove","fieldName","accept","lastDroppedItem","useDrop","drop","canDrop","collect","monitor","isOver","ref","sourceKey","EllipsizedTextContainer","exampleSourceValue","alignSelf","targetKey","Cancel","MappingSource","dropSource","isDropped","useDrag","isDragging","drag","hovering","setHovering","onMouseEnter","onMouseLeave","SOURCE_TYPE","DEFAULT_MAPPING","freeze","TARGETS","button","gridContainer","gridTemplateColumns","gridColumnGap","gridHeaderContainer","gridHeader","gridLeft","gridColumnStart","gridRight","mapTargetsToProvidedSources","providedSources","mappedSources","mappedTargets","setMappedTargets","useCallback","sourceName","find","t","updated","reversedMapping","onMappingChange","DndProvider","backend","HTML5Backend","gridRow","keyOne","keyTwo","indexOf","targets","next","sanitizeBusiness","sanitized","str","category","replace","txt","charAt","toUpperCase","substr","createSplitter","createSplitArrayDefinition","sourceFieldName","maxLength","fill","transform","FANCY_MAPPINGS","directory_category","location__city","field_email","parseFile","reader","FileReader","onabort","onerror","onload","binaryStr","result","encoder","TextDecoder","csvToJson","fromString","decode","readAsArrayBuffer","validateAndSanitize","csvMapping","fileContent","mapping","validateService","csv","om","merge","updateResolvedWithErrorCorrection","converted","businessIndex","errorIndex","unresolved","updatesCommitted","object","valueType","field","assignedValue","assignValue","existingIndex","resolved","findIndex","File_Select","setFileContent","setConverted","unresolvedIndex","setUnresolvedIndex","setCsvMapping","unresolvedErrorCount","handleNext","Map_Fields","Correct_Errors","Verify_Upload","validated","UploadWordpressExport","FieldMapper","selected","ListItemSecondaryAction","ErrorOutline","Check","ErrorCorrection","original","parse","newIndex","originalValue","resolvedIndex","splice","ConfirmUpload","Math","max","UnauthenticatedRoute","exact","Login","AuthenticatedRoute","Business","SyncBusinesses","AddBusiness","Users","Newsfeed","AddNewsfeedEntry","Toolbar","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","red","A400","app","App","ThemeProvider","utils","DateFnsUtils","Consumer","Header","Routes","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0692c07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bom-logo.52fa552e.png\";","import * as Path from 'path';\nimport {Business, UnresolvedBusiness} from \"../types/Business\";\nimport {NewsfeedEntry} from \"../types/NewsfeedEntry\";\nimport {User} from \"../types/User\";\n\nexport interface QueryParams {\n    startAfter?: number | string;\n    endBefore?: number | string;\n    orderBy?: string;\n    direction?: 'desc' | 'asc'\n    limit?: number;\n    nameLower?: string;\n    useCache?: boolean;\n}\n\nexport interface ValidationResponse {\n    resolved: Partial<Business>[];\n    unresolved: UnresolvedBusiness[];\n}\n\nlet cached: Business[];\n\nexport class BomService {\n    private readonly baseUrl: string;\n\n    constructor(private idToken: string) {\n        this.idToken = idToken;\n        this.baseUrl = 'us-east1-black-owned-maine-app.cloudfunctions.net/bom-services'\n    }\n\n    async verifyToken() {\n        return this.makeRequest(this.buildUrl('verify'));\n    }\n\n    async fetchServices({useCache, ...params}: QueryParams = {useCache: true}): Promise<Business[]> {\n        if (!cached) {\n            cached = await this.makeRequest(this.buildUrl('services', {limit: 99999999}));\n        }\n        return useCache ? cached : await this.makeRequest(this.buildUrl('services', params as Record<string, unknown>));\n    }\n\n    async deleteBusiness(id: string): Promise<void> {\n        return await this.makeRequest(this.buildUrl(`services/${id}`), {method: 'DELETE'});\n    }\n\n    async fetchFeed({...params}: QueryParams): Promise<NewsfeedEntry[]> {\n        return await this.makeRequest(this.buildUrl('feed', params as Record<string, unknown>));\n    }\n\n    async fetchArticle(id: string): Promise<NewsfeedEntry> {\n        return await this.makeRequest(this.buildUrl(`feed/${id}`));\n    }\n\n    async deleteFeedEntry(id: string): Promise<void> {\n        return await this.makeRequest(this.buildUrl(`feed/${id}`), {method: 'DELETE'});\n    }\n\n    async fetchCategories(): Promise<string[]> {\n        return Array.from(new Set((await this.fetchServices({limit: 10000})).flatMap(b => b.categories))).sort();\n    }\n\n    async fetchLocations(): Promise<string[]> {\n        return Array.from(new Set((await this.fetchServices({limit: 10000})).flatMap(b => b.location)));\n    }\n\n    async uploadBusinesses(businesses: Business[]): Promise<Business[]> {\n        return await this.makeRequest(this.buildUrl('services'), {method: 'PUT', body: JSON.stringify(businesses)});\n    }\n\n    async uploadNewsfeedEntries(entries: NewsfeedEntry[]): Promise<NewsfeedEntry[]> {\n        return await this.makeRequest(this.buildUrl('feed'), {method: 'PUT', body: JSON.stringify(entries)});\n    }\n\n    async convertExcel(excel: unknown): Promise<ValidationResponse> {\n        return await this.makeRequest(this.buildUrl('convert/excel'), {method: 'POST', body: JSON.stringify({content: excel})});\n    }\n\n    async validateService(service: unknown): Promise<ValidationResponse> {\n        return await this.makeRequest(this.buildUrl('validate'), {method: 'POST', body: JSON.stringify(service)});\n    }\n\n    async fetchUsers(): Promise<User[]> {\n        return await this.makeRequest(this.buildUrl('users'));\n    }\n\n    async putUsers(users: User[]): Promise<User> {\n        return await this.makeRequest(this.buildUrl('users'), {method: 'PUT', body: JSON.stringify(users)});\n    }\n\n    private async makeRequest(url: string, options: RequestInit = {}) {\n        if (!options.headers) {\n            options.headers = {};\n        }\n\n        options.headers = {\n            'Authorization': (options.headers as Record<string, string>).authorization || `Bearer ${this.idToken}`,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            ...options.headers,\n        }\n\n        const response = await fetch(url, options);\n        let body;\n        try {\n            body = await response.json();\n        } catch {\n            // meh\n        }\n        if (response.status >= 200 && response.status < 300) {\n            return body;\n        } else {\n            throw new ApiError(response.status, body);\n        }\n    }\n\n    private buildUrl(path: string, params?: Record<string, unknown>) {\n        let url = `https://${Path.join(this.baseUrl, path)}`;\n        if (params) {\n            const qString = Object.keys(params).filter(key => typeof params[key] !== 'undefined').map(key => `${key}=${encodeURI(params[key] as string)}`).join('&');\n            url += `?${qString}`;\n        }\n        return url;\n    }\n}\n\nexport class ApiError extends Error {\n\n    constructor(readonly status: number, readonly body?: unknown) {\n        super(`Status code error: ${status}${body ? `: ${JSON.stringify(body)}` : ''}`);\n    }\n}\n","export enum ValidationType {\n    Required = 'required',\n    Email = 'email'\n}\n\nexport interface InputValidatorProps {\n    handleValidation?: (args: ValidationResponse) => unknown;\n    label?: string;\n    validations?: [ValidationType]\n}\n\nexport interface ValidationResponse {\n    valid: boolean;\n    failureType?: ValidationType;\n    failureText?: string;\n}\n\nexport interface InputValidator {\n    (value: unknown): ValidationResponse\n}\n\nconst REGEXES = {\n    [ValidationType.Email]: /.+@.+\\..+/\n}\n\nexport const createValidator = (props: InputValidatorProps): InputValidator =>\n    (value: unknown): ValidationResponse => {\n        const response: ValidationResponse = {valid: true};\n        for (const validationType of props.validations || []) {\n            if (!response.valid) {\n                break;\n            }\n            switch (validationType) {\n                case ValidationType.Required: {\n                    if (typeof value === 'undefined' ||\n                        (typeof value === 'string' && (value as string).length === 0) ||\n                        (Array.isArray(value) && (value as unknown[]).length === 0)\n                    ) {\n                        response.valid = false;\n                        response.failureType = ValidationType.Required;\n                        response.failureText = props.label ? `${props.label} is required` : 'Field is required'\n                    }\n                    break;\n                }\n                case ValidationType.Email:\n                    if (Array.isArray(value)) {\n                        response.valid = (value as string[]).every(s => REGEXES[validationType]?.test(s));\n                    } else if (typeof value === 'string') {\n                        response.valid = REGEXES[validationType]?.test(value);\n                    }\n                    response.failureType = !response.valid ? validationType : undefined;\n                    response.failureText = !response.valid ? 'Invalid input' : undefined;\n                    break;\n            }\n        }\n        props.handleValidation?.(response);\n        return response;\n    }\n","let INITIALIZED = false;\n\nconst OAUTH_CLIENT_ID = '1040972232924-3jkml471q8dan5gpdjcb0f1efou71l0n.apps.googleusercontent.com';\n\nexport interface GapiTokens {\n    id_token: string;\n}\n\nexport const initialize = () => {\n    if (INITIALIZED) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n        window.gapi?.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: OAUTH_CLIENT_ID,\n                discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\n                scope: 'https://www.googleapis.com/auth/drive'\n            }).then(() => {\n                INITIALIZED = true;\n                resolve();\n            }).catch((err: unknown) => {\n                reject(err);\n            })\n        })\n    })\n}\n\nexport const getAuthInstance = () => {\n    return window.gapi?.auth2?.getAuthInstance();\n}\n\nexport const listDriveFiles = (args?: {query?: string}) => {\n    return window.gapi?.client.drive.files.list({\n        q: args && args.query && `name contains \"${args.query}\"`,\n        pageSize: 10,\n        fields: 'nextPageToken, files(id, name, mimeType)'\n    })\n}\n\nexport const downloadDriveFile = (file: any) => {\n    if (file.mimeType.toLowerCase().includes('google-apps')) {\n        return window.gapi?.client.drive.files.export({\n            fileId: file.id,\n            mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        })\n    } else {\n        return window.gapi?.client.drive.files.get({\n            fileId: file.id,\n            alt: 'media',\n            supportsAllDrives: true\n        })\n    }\n};\n","import React from 'react';\nimport {BomService} from \"../service/BomService\";\nimport * as GAPI from '../util/gapi-wrapper';\n\nexport interface AuthResponse {\n    readonly access_token: string;\n    readonly id_token: string;\n    readonly login_hint: string;\n    readonly scope: string;\n    readonly expires_in: number;\n    readonly first_issued_at: number;\n    readonly expires_at: number;\n}\n\nexport interface AuthContextType {\n    authenticated: boolean;\n    authorizing: boolean;\n    userRole?: string;\n    userCredentials?: AuthResponse;\n    adminServices?: BomService;\n\n    signOut: () => void;\n    signIn: () => void;\n}\n\nexport const AuthContext = React.createContext<AuthContextType>(undefined as unknown as AuthContextType);\n\nconst AuthProvider = (props: { children: React.ReactNode }) => {\n    const [authenticated, setAuthenticated] = React.useState(false);\n    const [authorizing, setAuthorizing] = React.useState(true);\n    const [userCredentials, setUserCredentials] = React.useState<AuthResponse>();\n    const [userRole, setUserRole] = React.useState<string>();\n    const [adminServices, setAdminServices] = React.useState(new BomService(''));\n\n    const handleLogin = async (tokens: AuthResponse) => {\n        console.log(`Handling login at ${new Date().toLocaleString()}`)\n        setAuthorizing(true);\n        const bomService = new BomService((tokens.id_token));\n        try {\n            // await bomService.verifyToken();\n            setAdminServices(bomService);\n            setUserCredentials(tokens);\n            setAuthorizing(false)\n            setAuthenticated(true);\n        } catch (err) {\n            handleLoginError(err)\n        }\n    }\n\n    const handleLogout = () => {\n        setAuthenticated(false);\n        setAuthorizing(false);\n        setUserCredentials(undefined);\n        setUserRole(undefined);\n    }\n\n    const handleLoginError = (response: unknown) => {\n        console.log(`Login error at ${new Date().toLocaleString()}: ${JSON.stringify(response)}`);\n        setUserCredentials(undefined);\n        setAuthenticated(false);\n        setAuthorizing(false);\n    }\n\n    React.useEffect(() => {\n        GAPI.initialize().then(async () => {\n            const authInstance = await GAPI.getAuthInstance();\n            authInstance.isSignedIn?.listen(async (signedIn: boolean) => {\n                if (signedIn) {\n                    await handleLogin(getTokenFromAuthInstance(authInstance));\n                }\n            })\n            if (authInstance.isSignedIn?.get()) {\n                await handleLogin(getTokenFromAuthInstance(authInstance));\n            } else {\n                setAuthorizing(false);\n            }\n        })\n    }, [])\n\n    const signIn = () => {\n        window.gapi.auth2.getAuthInstance().signIn({\n            prompt: 'select_account'\n        });\n    }\n\n    const signOut = () => {\n        window.gapi.auth2.getAuthInstance().signOut();\n        handleLogout();\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            authenticated,\n            userRole,\n            userCredentials,\n            authorizing,\n            adminServices,\n            signOut,\n            signIn\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nconst getTokenFromAuthInstance = (authInstance: any) => {\n    const currentUser = authInstance.currentUser?.get();\n    if (currentUser) {\n        for (const key of Object.keys(currentUser)) {\n            if (currentUser[key] && currentUser[key].id_token) {\n                return currentUser[key];\n            }\n        }\n    }\n}\n\nexport default AuthProvider;\n","import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {AuthContext} from \"../context/AuthContext\";\n\nexport default ({component: Component, allowedRoles = [], ...rest}) => {\n    const context = React.useContext(AuthContext);\n\n    return <Route\n        {...rest}\n        render={props =>\n            context.authenticated ?\n                !allowedRoles || allowedRoles.length === 0 || allowedRoles.includes(context.userRole)\n                    ? <Component {...props} />\n                    : <Redirect to={{pathname: '/home', state: {from: props.location}}}/>\n                :\n                <Redirect to={{pathname: '/login', state: {from: props.location}}}/>\n        }\n    />\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {AuthContext} from \"../context/AuthContext\";\n\nexport interface UnauthenticatedRouteProps extends Record<string, unknown>{\n    component: any;\n    noRedirect?: boolean\n}\n\nexport default ({ noRedirect, component: Component, ...rest }: UnauthenticatedRouteProps) => {\n    const context = React.useContext(AuthContext);\n\n    return <Route\n        {...rest}\n        render={props =>\n            !context.authenticated || noRedirect ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{pathname: '/', state: {from: props.location}}}/>\n            )\n        }\n    />\n}\n","export const StyleConstants = {\n  Colors: {\n    background: '#181819',\n    cardBackground: '#2b2828',\n    text: '#cfcfcf',\n    divider: '#3e3e3e',\n    lightGray: '#747474',\n    gray: '#3e3e3e',\n    darkGray: '#181819',\n    lightAccent: '#e9a825',\n    darkAccent: '#FF9800',\n    font: '#ffffff',\n    altAccent: '#4CA9B4',\n    lightRed: '#d74b4b'\n  },\n  Fonts: {\n    default: 'System'\n  }\n};\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Button, CircularProgress} from \"@material-ui/core\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {StyleConstants} from \"../util/Themes\";\n\nconst createStyles = makeStyles({\n    root: {\n        height: '100%',\n        width: '100%',\n        backgroundColor: StyleConstants.Colors.background\n    },\n    wrapper: {\n        paddingTop: '50px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    card: {\n        backgroundColor: StyleConstants.Colors.background,\n        margin: '30px'\n    },\n    labelWrapper: {\n        marginTop: '30px',\n        marginBottom: '30px',\n        color: StyleConstants.Colors.text\n    }\n});\n\nexport default () => {\n    const authContext = React.useContext(AuthContext);\n    const classes = createStyles();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.wrapper}>\n                <img alt=\"Black Owned Maine\" src={require('../images/bom-logo.png')}/>\n            </div>\n            {authContext.authorizing\n                ? (\n                    <div className={classes.wrapper}>\n                        <CircularProgress size={80}/>\n                    </div>\n                )\n                : (\n                    <div className={classes.wrapper}>\n                        <div className={classes.labelWrapper}>\n                        </div>\n                    </div>\n                )\n            }\n            <div className={classes.wrapper}>\n                <Button\n                    disabled={authContext.authorizing}\n                    variant=\"outlined\"\n                    onClick={authContext.signIn}>\n                        Login with Google\n                </Button>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow, useMediaQuery, useTheme\n} from \"@material-ui/core\";\nimport {Business} from \"../../types/Business\";\n\nexport interface BusinessTableProps {\n    businesses: Business[];\n    onSelectBusiness?: (b: Business) => void;\n}\n\nexport default (props: BusinessTableProps) => {\n    const small = useMediaQuery(useTheme().breakpoints.down('xs'));\n\n    return (\n        <TableContainer component={Paper} style={{height: '100%'}}>\n            <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        {!small && (<TableCell>Locations</TableCell>)}\n                        {!small && (<TableCell>Categories</TableCell>)}\n                        {!small && (<TableCell>Last Modified</TableCell>)}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.businesses.map((business: Business) => (\n                        <TableRow\n                            style={{cursor: 'default'}}\n                            hover={typeof props.onSelectBusiness !== 'undefined'}\n                            key={business.name}\n                            onClick={() => props.onSelectBusiness && props.onSelectBusiness(business)}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {business.name}\n                            </TableCell>\n                            {!small && (<TableCell>{business.location.join(', ')}</TableCell>)}\n                            {!small && (<TableCell>{business.categories.join(', ')}</TableCell>)}\n                            {!small && (<TableCell>{new Date(business.lastModified as number).toLocaleString()}</TableCell>)}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n","import React, {CSSProperties} from \"react\";\nimport {Grid, TextField} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: '400px',\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '5px'\n    },\n    input: {\n        marginLeft: '10px',\n        flex: 4\n    },\n    icon: {}\n})\n\nexport interface SearchBarProps {\n    searchValue?: string;\n    onChange?: (value: string) => unknown;\n    onSubmit?: (value: string) => unknown;\n    rootStyles?: CSSProperties;\n    inputStyles?: CSSProperties;\n    iconStyles?: CSSProperties;\n}\n\nexport default (props: SearchBarProps) => {\n    const [searchText, setSearchText] = React.useState();\n    const classes = useStyles();\n\n    return (\n        <div style={props.rootStyles} className={classes.root}>\n            <form onSubmit={(event) => {\n                event.preventDefault();\n                props.onSubmit?.(searchText);\n            }}>\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                    <Grid item>\n                        <SearchIcon color=\"secondary\"/>\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            color=\"secondary\"\n                            id=\"input-with-icon-grid\"\n                            label=\"Search\"\n                            value={searchText}\n                            onChange={(event) => {\n                                setSearchText(event.target.value);\n                                props.onChange?.(event.target.value)\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n    Backdrop, Button,\n    CircularProgress,\n    TablePagination, useTheme\n} from \"@material-ui/core\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {Business} from \"../types/Business\";\nimport {QueryParams} from \"../service/BomService\";\nimport BusinessTable from \"../components/business/BusinessTable\";\nimport SearchBar from \"../components/SearchBar\";\nimport {useHistory} from \"react-router-dom\";\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: '15px',\n        maxHeight: '70vh'\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start'\n        }\n    }\n}))\n\nexport default () => {\n    const history = useHistory();\n    const [businesses, setBusinesses] = React.useState([] as Business[]);\n    const [loading, setLoading] = React.useState(true);\n    const [rowsPerPage, setRowsPerPage] = React.useState(25);\n    const [page, setPage] = React.useState(0);\n    const [pageIndexes, setPageIndexes] = React.useState([] as string[]);\n    const [totalCount, setTotalCount] = React.useState(-1);\n    const [query, setQuery] = React.useState('');\n    const classes = useStyles(useTheme());\n    const context = React.useContext(AuthContext);\n\n\n    React.useEffect(() => {\n        if (context.adminServices) {\n            setLoading(true)\n            const params: QueryParams = {\n                orderBy: 'nameLower',\n                limit: rowsPerPage,\n                startAfter: page === 0 ? undefined : pageIndexes[page]?.toLowerCase() || (businesses?.[rowsPerPage - 1]?.name?.toLowerCase()),\n                nameLower: query?.length > 0 ? query.toLowerCase() : undefined,\n                useCache: false\n            };\n            context.adminServices.fetchServices(params)\n                .then((results: Business[]) => {\n                    if (results.length > 0) {\n                        setBusinesses(results);\n                        pageIndexes[page + 1] = results[results.length - 1].name;\n                        setPageIndexes(pageIndexes);\n                    } else if (page !== 0){\n                        setTotalCount(((page - 1) * rowsPerPage) + businesses.length);\n                        setPage(page - 1);\n                    }\n                })\n                .catch(err => console.error(err))\n                .finally(() => {\n                    setLoading(false);\n                })\n        }\n    }, [context.adminServices, page, rowsPerPage, query])\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n        console.log(`Changing page from ${page} to ${newPage}`);\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleSearch = (q: string) => {\n        setQuery(q);\n        setPage(0);\n    }\n\n    const debouncedSearch = AwesomeDebouncePromise(handleSearch, 750);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <SearchBar onChange={debouncedSearch}/>\n                <div>\n                    <Button onClick={() => history.push('/addBusiness')}>Add Business</Button>\n                    <Button onClick={() => history.push('/sync')}>Upload CSV</Button>\n                </div>\n            </div>\n            <BusinessTable businesses={businesses} onSelectBusiness={(b) => history.push('/addBusiness', {business: b})}/>\n            <TablePagination\n                backIconButtonProps={{disabled: loading || page === 0}}\n                nextIconButtonProps={{disabled: loading || (totalCount > 0 && (page + 1) * rowsPerPage > totalCount)}}\n                rowsPerPageOptions={[10, 25, 50]}\n                component=\"div\"\n                count={totalCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n            <Backdrop style={{zIndex: 0, color: '#fff'}} open={loading}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n    Backdrop,\n    Button,\n    CircularProgress, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow, TextField, useMediaQuery, useTheme\n} from \"@material-ui/core\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {User} from \"../types/User\";\nimport {RemoveCircleOutline} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\ninterface AddUserDialogProps {\n    dialogOpen: boolean;\n    setDialogOpen: (b: boolean) => any;\n    addUser: (e: string) => any;\n}\n\nconst AddUserDialog = ({dialogOpen, setDialogOpen, addUser}: AddUserDialogProps) => {\n    const [user, setUser] = React.useState('');\n\n    return (\n        <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n            <DialogTitle>Add user</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Enter the user's G-Mail address to allow them access to the management page. User must have a valid\n                    Google account to use this page.\n                </DialogContentText>\n                <TextField\n                    color=\"secondary\"\n                    value={user}\n                    onChange={(ev) => setUser(ev.target?.value)}\n                    autoFocus\n                    margin=\"dense\"\n                    label=\"Email Address\"\n                    type=\"email\"\n                    fullWidth\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setDialogOpen(false)} color=\"secondary\">\n                    Cancel\n                </Button>\n                <Button onClick={() => {\n                    addUser(user)\n                        .then(() => setDialogOpen(false))\n                }} color=\"secondary\">\n                    Add User\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\ninterface DeleteUserDialogProps {\n    dialogOpen: boolean;\n    setDialogOpen: (b: boolean) => any;\n    deleteUser: () => Promise<any>\n}\n\nconst DeleteUserDialog = ({dialogOpen, setDialogOpen, deleteUser}: DeleteUserDialogProps) => {\n    return (\n        <Dialog\n            open={dialogOpen}\n            onClose={() => setDialogOpen(false)}\n        >\n            <DialogTitle>{\"Delete newsfeed entry?\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Are you sure you'd like to delete this entry?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setDialogOpen(false)} color=\"secondary\">\n                    Cancel\n                </Button>\n                <Button onClick={() => {\n                    deleteUser()\n                        .then(() => setDialogOpen(false))\n                        .catch(err => console.error(err));\n                }} color=\"secondary\" autoFocus>\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        margin: '15px'\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        marginBottom: '10px'\n    },\n    addUserContainer: {\n        marginLeft: 'auto'\n    },\n    table: {\n        maxHeight: '70vh'\n    }\n}))\n\ninterface UserTableProps {\n    users: User[];\n    onDelete: (u: User) => void;\n}\n\nconst UserTable = (props: UserTableProps) => {\n    const theme = useTheme();\n    const classes = useStyles(theme);\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <TableContainer component={Paper} className={classes.table}>\n            <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>E-Mail Address</TableCell>\n                        {!small && (<TableCell>Currently Active</TableCell>)}\n                        {!small && (<TableCell>Last Modified</TableCell>)}\n                        <TableCell/>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.users.map((user: User) => (\n                        <TableRow\n                            style={{cursor: 'default'}}\n                            key={user.email}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {user.email}\n                            </TableCell>\n                            {!small && (<TableCell>{`${user.valid}`}</TableCell>)}\n                            {!small && (<TableCell>{user.lastModified && new Date(user.lastModified).toLocaleDateString()}</TableCell>)}\n                            <TableCell>\n                                {user.valid && (\n                                    <div style={{display: 'flex'}}>\n                                        <IconButton style={{marginLeft: 'auto'}} onClick={() => {\n                                            props.onDelete(user);\n                                        }}>\n                                            <RemoveCircleOutline style={{color: '#d74b4b'}}/>\n                                        </IconButton>\n                                    </div>\n                                )}\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default () => {\n    const [users, setUsers] = React.useState([] as User[]);\n    const [loading, setLoading] = React.useState(true);\n    const [addUserDialogOpen, setAddUserDialogOpen] = React.useState(false);\n    const [deleteUserDialogOpen, setDeleteUserDialogOpen] = React.useState(false);\n    const [refreshCounter, setRefreshCounter] = React.useState(0);\n    const [selectedUser, setSelectedUser] = React.useState();\n    const theme = useTheme();\n    const classes = useStyles(theme);\n    const context = React.useContext(AuthContext);\n\n    React.useEffect(() => {\n        context.adminServices?.fetchUsers()\n            .then(users => setUsers(users))\n            .catch(err => console.error(err))\n            .finally(() => setLoading(false));\n    }, [context.adminServices, refreshCounter])\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.addUserContainer}>\n                    <Button onClick={() => setAddUserDialogOpen(true)}>Add User</Button>\n                </div>\n            </div>\n            <UserTable users={users} onDelete={(user) => {\n                setSelectedUser(user);\n                setDeleteUserDialogOpen(true);\n            }}/>\n\n            <AddUserDialog\n                dialogOpen={addUserDialogOpen}\n                setDialogOpen={setAddUserDialogOpen}\n                addUser={async (email) => {\n                    await context.adminServices?.putUsers([{email, valid: true}]);\n                    setRefreshCounter(refreshCounter + 1);\n                }}/>\n            <DeleteUserDialog\n                dialogOpen={deleteUserDialogOpen}\n                setDialogOpen={setDeleteUserDialogOpen}\n                deleteUser={async () => {\n                    await context.adminServices?.putUsers([{email: selectedUser.email, valid: false}])\n                    setRefreshCounter(refreshCounter + 1);\n                }}/>\n            <Backdrop style={{zIndex: 0, color: '#fff'}} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n    Backdrop,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    CardMedia, CircularProgress,\n    Dialog, DialogActions, DialogContent, DialogContentText,\n    DialogTitle,\n    IconButton,\n    Typography\n} from \"@material-ui/core\";\nimport {useHistory} from 'react-router-dom';\nimport {AuthContext} from \"../context/AuthContext\";\nimport {NewsfeedEntry} from \"../types/NewsfeedEntry\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {StyleConstants} from \"../util/Themes\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    addButtonContainer: {\n        marginLeft: 'auto',\n        padding: '30px'\n    },\n    cardContainer: {\n        margin: '30px',\n        transition: '0.2s',\n        '&:hover': {\n            backgroundColor: StyleConstants.Colors.lightGray\n        }\n    }\n})\n\nexport default () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const context = React.useContext(AuthContext);\n    const [loading, setLoading] = React.useState(true);\n    const [entries, setEntries] = React.useState([] as NewsfeedEntry[]);\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [selectedEntry, setSelectedEntry] = React.useState();\n\n    const refreshEntries = () => {\n        context.adminServices?.fetchFeed({limit: 10, orderBy: 'date', direction: 'desc'})\n            .then((feed) => {\n                setEntries(feed);\n            })\n            .catch(err => console.error(err))\n            .finally(() => setLoading(false));\n    }\n\n    React.useEffect(refreshEntries, [context.adminServices]);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.addButtonContainer}>\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => history.push('/addNewsfeed')}>Add</Button>\n            </div>\n            {entries.map(entry => (\n                <Card key={entry.id} className={classes.cardContainer} raised onClick={() => history.push('/addNewsFeed', {entry})}>\n                    <CardHeader\n                        title={(\n                            <div style={{display: 'flex'}}>\n                                {entry.title}\n                                <IconButton style={{marginLeft: 'auto'}}\n                                            onClick={(ev) => {\n                                                ev.stopPropagation();\n                                                setSelectedEntry(entry);\n                                                setDialogOpen(true);\n                                            }}>\n                                    <DeleteIcon style={{color: StyleConstants.Colors.lightRed}}/>\n                                </IconButton>\n                            </div>\n                        )}\n                        subheader={new Date(entry.date).toLocaleDateString()}\n                    />\n                    {entry.imageUrl && (<CardMedia image={entry.imageUrl}/>)}\n                    {entry.subtitle && (\n                        <CardContent>\n                            <Typography>{entry.subtitle}</Typography>\n                        </CardContent>\n                    )}\n                </Card>\n            ))}\n\n            <Dialog\n                open={dialogOpen}\n                onClose={() => setDialogOpen(false)}\n            >\n                <DialogTitle>{\"Delete newsfeed entry?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure you'd like to delete this entry?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setDialogOpen(false)} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => {\n                        context.adminServices?.deleteFeedEntry(selectedEntry.id)\n                            .then(() => setDialogOpen(false))\n                            .then(refreshEntries)\n                            .catch(err => console.error(err));\n                    }} color=\"secondary\" autoFocus>\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Backdrop style={{zIndex: 0, color: '#fff'}} open={loading}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </div>\n    )\n}\n","import {StandardTextFieldProps, TextField} from \"@material-ui/core\";\nimport {InputValidator} from \"../util/InputValidator\";\nimport React, {ChangeEvent} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    input: {\n        width: '100%'\n    }\n})\n\ninterface BasicInputProps extends StandardTextFieldProps {\n    label: string;\n    disabled?: boolean;\n    onUpdate?: (value: string) => unknown;\n    validator?: InputValidator\n}\n\nexport default ({label, disabled, onUpdate, validator, ...props}: BasicInputProps) => {\n    const classes = useStyles();\n    const [error, setError] = React.useState(false);\n    const [helperText, setHelperText] = React.useState();\n\n    const validate = (value = props.value) => {\n        if (validator) {\n            const {valid, failureText} = validator(value);\n            setError(!valid);\n            setHelperText(failureText);\n        }\n    }\n\n    const handleChange = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        validate(event.target.value);\n        onUpdate?.(event.target.value)\n    }\n\n    React.useEffect(() => {\n        // Do an initial validation with callback, but don't alter the input view until the user interacts with is\n        validator?.(props.value)\n    }, []);\n\n    return (\n        <TextField\n            helperText={helperText}\n            error={error}\n            required={props.required}\n            disabled={disabled}\n            autoComplete=\"off\"\n            type=\"search\"\n            onChange={handleChange}\n            onBlur={() => validate()}\n            color=\"secondary\"\n            label={label}\n            className={classes.input}\n            {...props}\n            value={props.value || ''}\n        />\n    )\n}\n","import {Autocomplete, createFilterOptions} from \"@material-ui/lab\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport React from \"react\";\nimport ValidatableInput from \"./ValidatableInput\";\nimport {InputValidator} from \"../util/InputValidator\";\n\nconst filter = createFilterOptions<string>();\n\ninterface MultiEntryProps {\n    inputLabel: string;\n    onUpdate: (values: string[]) => unknown\n    disabled?: boolean\n    values?: string[];\n    options?: string[];\n    inputClass?: string;\n    loading?: boolean;\n    validator?: InputValidator;\n    helperText?: string;\n}\n\nexport default (props: MultiEntryProps) => {\n    const [error, setError] = React.useState(false);\n    const [helperText, setHelperText] = React.useState(props.helperText);\n\n    const validate = (value: string[] = props.values || []) => {\n        if (props.validator) {\n            const {valid, failureText} = props.validator(value);\n            setError(!valid);\n            setHelperText(failureText);\n        }\n    }\n\n    return (\n        <div>\n            <Autocomplete\n                multiple\n                disabled={props.disabled}\n                value={props.values || []}\n                freeSolo\n                loading={props.loading}\n                onChange={(ev, newValue) => {\n                    validate(newValue);\n                    props.onUpdate(newValue)\n                }}\n                options={props.options || []}\n                getOptionLabel={(option) => option}\n                renderInput={(params) => (\n                    <ValidatableInput\n                        {...params}\n                        style={{width: '100%', minWidth: '200px'}}\n                        color=\"secondary\"\n                        label={props.inputLabel}\n                        placeholder={props.inputLabel}\n                        className={props.inputClass}\n                        helperText={helperText}\n                        error={error}\n                        onBlur={() => validate()}\n                        InputProps={{\n                            ...params.InputProps,\n                            endAdornment: (\n                                <React.Fragment>\n                                    {!!props.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                    {params.InputProps.endAdornment}\n                                </React.Fragment>\n                            ),\n                        }}\n                    />\n                )}\n                filterOptions={(options, params) => {\n                    const filtered = filter(options, params);\n\n                    // Suggest the creation of a new value\n                    if (params.inputValue !== '') {\n                        filtered.push(params.inputValue);\n                    }\n\n                    return filtered;\n                }}\n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport {\n    Backdrop,\n    CircularProgress,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\nimport csvToJson from 'csvtojson';\nimport om from 'object-mapper';\nimport {useHistory} from \"react-router-dom\";\nimport {Business} from \"../types/Business\";\nimport {assignValue} from \"../util/GeneralUtils\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport UploadWordpressExport from \"../components/sync/UploadWordpressExport\";\nimport {BomService, ValidationResponse} from \"../service/BomService\";\nimport ErrorCorrection from \"../components/sync/ErrorCorrection\";\nimport ConfirmUpload from \"../components/sync/ConfirmUpload\";\nimport FieldMapper from \"../fieldMapping/FieldMapper\";\nimport {sanitizeBusiness} from \"../util/BusinessValidator\";\nimport {StyleConstants} from \"../util/Themes\";\nimport {Check, ErrorOutline} from \"@material-ui/icons\";\n\n// If a mapping requires some additional work, add it here\n// The object-mapper project doesn't provide a way to transform a source string into a target array, so this is kind of\n// a hack to get it to work -- we specify X number of indices in the array and provide a transform function to split\n// the string into an array, grab the appropriate index, and return the value. If the source array doesn't have enough,\n// then the splitter function returns null and the object-mapper util will not assign the value to the array (note that\n// it has to return null and not undefined for the object-mapper to ignore it). Downside means there is a hard limit\n// to the number of values that can be mapped\nconst createSplitter = (index: number) => (value: string) => {\n    const split = (value ? value.trim().split(/,\\s*/) : []);\n    return typeof split[index] === 'undefined' ? null : split[index]\n}\n\nconst createSplitArrayDefinition = (sourceFieldName: string, maxLength: number = 10) =>\n    new Array(maxLength).fill(0).map((v, index) => ({\n        key: `${sourceFieldName}[${index}]`,\n        transform: createSplitter(index)\n    }))\nconst FANCY_MAPPINGS = Object.freeze({\n    directory_category: createSplitArrayDefinition('categories'),\n    location__city: createSplitArrayDefinition('location'),\n    field_email: createSplitArrayDefinition('email')\n});\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    footer: {\n        width: '100%',\n        display: 'flex',\n        marginTop: 'auto'\n    },\n    buttonContainer: {\n        marginLeft: 'auto',\n        padding: '30px'\n    },\n    contentContainer: {},\n    backButton: {},\n    instructions: {},\n})\n\nconst parseFile = (file: File) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = async () => {\n            // Do whatever you want with the file contents\n            const binaryStr: ArrayBuffer = reader.result as ArrayBuffer;\n            const encoder = new TextDecoder(\"utf-8\");\n            const content = await csvToJson().fromString(encoder.decode(binaryStr));\n            resolve(content);\n        }\n        reader.readAsArrayBuffer(file)\n    })\n}\n\nconst validateAndSanitize = async (adminServices: BomService, {\n    csvMapping,\n    fileContent\n}: { csvMapping: any, fileContent: any }) => {\n    const mapping = {...csvMapping, ...FANCY_MAPPINGS};\n    return await adminServices.validateService(\n        fileContent.map((csv: any) => {\n            return sanitizeBusiness(om.merge(csv, mapping))\n        })\n    );\n}\n\nconst updateResolvedWithErrorCorrection = ({converted, businessIndex, errorIndex}:\n                                               { converted?: ValidationResponse, businessIndex: number, errorIndex: number }) => {\n    if (converted) {\n        // Assign the appropriate values from the errors\n        const business = converted.unresolved[businessIndex].value;\n        const err = converted.unresolved[businessIndex].error[errorIndex];\n        const value = err.context.value;\n        err.updatesCommitted = true;\n        assignValue(business, value, err.path, err.valueType);\n        // Has it already been previously resolved?\n        const existingIndex = converted.resolved.findIndex((b) => b.name === converted.unresolved[businessIndex].value.name);\n        if (existingIndex >= 0) {\n            // If it has, update it to the new resolution\n            converted.resolved[existingIndex] = business;\n        } else {\n            // Otherwise, add it to the array\n            converted.resolved.push(business as Partial<Business>);\n        }\n    }\n    return converted;\n}\n\nenum ActiveStep {\n    File_Select,\n    Map_Fields,\n    Correct_Errors,\n    Verify_Upload\n}\n\nexport default () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const authContext = React.useContext(AuthContext);\n\n    const [activeStep, setActiveStep] = React.useState<ActiveStep>(ActiveStep.File_Select);\n    const [selectedFile, setSelectedFile] = React.useState();\n    const [fileContent, setFileContent] = React.useState();\n    const [converted, setConverted] = React.useState<ValidationResponse>();\n    const [unresolvedIndex, setUnresolvedIndex] = React.useState(0);\n    const [csvMapping, setCsvMapping] = React.useState();\n    const [loading, setLoading] = React.useState(false);\n\n    const unresolvedErrorCount = converted?.unresolved.filter(value => value.error.some(err => !err.updatesCommitted)).length || 0;\n\n    const steps = [\n        'File Select',\n        'Map Fields',\n        `Correct errors${unresolvedErrorCount > 0 ? ` (${unresolvedErrorCount})` : ''}`,\n        'Verify Content'\n    ]\n\n    const handleNext = async () => {\n\n        switch (activeStep) {\n            case ActiveStep.File_Select:\n                setLoading(true);\n                const content = await parseFile(selectedFile);\n                setFileContent(content);\n                setLoading(false);\n                setActiveStep(ActiveStep.Map_Fields);\n                break;\n            case ActiveStep.Map_Fields:\n                setLoading(true);\n                if (authContext.adminServices) {\n                    const validated = await validateAndSanitize(authContext.adminServices, {csvMapping, fileContent});\n                    setConverted(validated);\n                    setActiveStep(validated.unresolved.length > 0 ? ActiveStep.Correct_Errors : ActiveStep.Verify_Upload);\n                }\n                setLoading(false);\n                break;\n            case ActiveStep.Correct_Errors:\n                setActiveStep(ActiveStep.Verify_Upload);\n                break;\n            case ActiveStep.Verify_Upload:\n                setLoading(true);\n                await authContext.adminServices?.uploadBusinesses(converted?.resolved as Business[]);\n                setLoading(false);\n                history.push('/businesses')\n                break;\n        }\n    };\n\n    React.useEffect(() => console.log(converted), [converted]);\n\n    const handleBack = () => setActiveStep(Math.max(activeStep - 1, 0));\n\n    const getContent = (index: number) => {\n        switch (index) {\n            case ActiveStep.File_Select:\n                return (\n                    <UploadWordpressExport\n                        handleNext={handleNext}\n                        setSelectedFile={setSelectedFile}\n                        selectedFile={selectedFile}\n                    />\n                );\n            case ActiveStep.Map_Fields:\n                return (\n                    <FieldMapper next={handleNext} providedSources={fileContent?.[0]} onMappingChange={setCsvMapping}/>\n                )\n            case ActiveStep.Correct_Errors:\n                return (\n                    <div style={{display: 'flex', width: '100%'}}>\n                        <List style={{flex: 1, backgroundColor: StyleConstants.Colors.cardBackground}}>\n                            {converted?.unresolved.map((unresolved, index) => (\n                                <ListItem key={index.toString()} button selected={index === unresolvedIndex}\n                                          onClick={() => setUnresolvedIndex(index)}>\n                                    <ListItemText>\n                                        <Typography style={{color: StyleConstants.Colors.text}}>\n                                            {unresolved.value.name}\n                                        </Typography>\n                                    </ListItemText>\n                                    <ListItemSecondaryAction>\n                                        {unresolved.error.some(err => !err.updatesCommitted)\n                                            ? <ErrorOutline style={{color: StyleConstants.Colors.text}}/>\n                                            : <Check style={{color: StyleConstants.Colors.lightAccent}}/>\n                                        }\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            ))}\n                        </List>\n                        <div style={{flex: 5}}>\n                            <ErrorCorrection\n                                errors={converted?.unresolved[unresolvedIndex]?.error}\n                                onUpdate={(value, errorIndex) => {\n                                    const updated = {...converted} as ValidationResponse;\n                                    if (!updated.unresolved[unresolvedIndex].original) {\n                                        updated.unresolved[unresolvedIndex].original = JSON.parse(JSON.stringify(updated.unresolved[unresolvedIndex].value));\n                                    }\n                                    updated.unresolved[unresolvedIndex].error[errorIndex].context.value = value;\n                                    setConverted(updated);\n                                }}\n                                onSave={() => {\n                                    const updated = {...converted} as ValidationResponse;\n                                    updated.unresolved[unresolvedIndex].error.forEach((err, index) => {\n                                        updateResolvedWithErrorCorrection({\n                                            converted: updated,\n                                            businessIndex: unresolvedIndex,\n                                            errorIndex: index\n                                        });\n                                        const newIndex = unresolvedIndex + 1;\n                                        setUnresolvedIndex(newIndex);\n                                        setConverted(updated);\n                                        if (!updated?.unresolved || newIndex >= updated.unresolved.length) {\n                                            setActiveStep(ActiveStep.Verify_Upload);\n                                        }\n                                    })\n                                }}\n                                onReset={() => {\n                                    const updated = {...converted} as ValidationResponse;\n                                    updated.unresolved[unresolvedIndex].error.forEach(err => {\n                                        err.context.value = err.context.originalValue;\n                                        err.updatesCommitted = false;\n                                    })\n                                    updated.unresolved[unresolvedIndex].value = updated.unresolved[unresolvedIndex].original;\n                                    // Find and removed the resolved copy\n                                    const resolvedIndex = updated.resolved.findIndex((b) => b.name === updated.unresolved[unresolvedIndex].value.name);\n                                    if (resolvedIndex > 0) {\n                                        updated.resolved.splice(resolvedIndex, 1);\n                                    }\n                                    setConverted(updated);\n                                }}\n                                name={converted?.unresolved[unresolvedIndex]?.value.name}\n                                details={converted?.unresolved[unresolvedIndex]?.value}\n                            />\n                        </div>\n                    </div>\n\n                )\n            case ActiveStep.Verify_Upload:\n                return (\n                    <ConfirmUpload\n                        count={converted?.resolved.length}\n                        unresolvedCount={unresolvedErrorCount}\n                    />\n                )\n            default:\n                return 'How did this happen'\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div className={classes.contentContainer}>\n                {getContent(activeStep)}\n            </div>\n            <div className={classes.footer}>\n                <div className={classes.buttonContainer}>\n                    <Button\n                        style={{marginRight: '10px'}}\n                        disabled={activeStep === ActiveStep.File_Select}\n                        onClick={handleBack}\n                        className={classes.backButton}\n                    >\n                        Back\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                        {activeStep === ActiveStep.Verify_Upload\n                            ? 'Upload'\n                            : activeStep === ActiveStep.Correct_Errors ? 'Continue to Upload' : 'Next'}\n                    </Button>\n                </div>\n            </div>\n            <Backdrop style={{zIndex: 0, color: '#fff'}} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {Business} from \"../../types/Business\";\nimport {Grid, useTheme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AuthContext} from \"../../context/AuthContext\";\nimport AutocompleteMultiSelect from \"../AutocompleteMultiSelect\";\nimport {createValidator, ValidationType} from \"../../util/InputValidator\";\nimport ValidatableInput from \"../ValidatableInput\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: '0px',\n        width: '100%'\n    },\n    inputContainer: {\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: '5px !important',\n            paddingRight: '5px !important'\n        },\n    }\n}))\n\n\nexport interface BusinessInfoProps {\n    business: Partial<Business>;\n    onUpdate?: (b: Partial<Business>) => unknown\n    onValidation?: (valid: boolean) => unknown\n    editing?: boolean\n}\n\n// TODO - Validation\nexport default (props: BusinessInfoProps) => {\n    const authContext = React.useContext(AuthContext);\n    const [business, setBusiness] = React.useState(props.business);\n    const [locationsLoading, setLocationsLoading] = React.useState(true);\n    const [categoriesLoading, setCategoriesLoading] = React.useState(true);\n    const [locations, setLocations] = React.useState();\n    const [categories, setCategories] = React.useState();\n    const [valids, setValids] = React.useState<Record<string, boolean>>({});\n\n    React.useEffect(() => {\n        authContext.adminServices?.fetchCategories()\n            .then(cats => {\n                setCategories(cats || []);\n                setCategoriesLoading(false);\n            })\n            .then(() => authContext.adminServices?.fetchLocations())\n            .then(locs => {\n                setLocations(locs || []);\n                setLocationsLoading(false);\n            })\n            .catch(err => console.error(err))\n    }, [authContext.adminServices]);\n\n    React.useEffect(() => {\n        props.onUpdate?.(business)\n    }, [business]);\n\n    React.useEffect(() => {\n        props.onValidation?.(Object.values(valids).reduce((prev, curr) => prev && curr, true));\n    }, [valids]);\n\n    const classes = useStyles(useTheme());\n\n    return (\n        <div style={{margin: '15px'}}>\n            <Grid container spacing={10} className={classes.root} alignItems=\"flex-end\">\n                <Grid item xs={12} md={12} className={classes.inputContainer}>\n                    <ValidatableInput\n                        label=\"Business Name\"\n                        disabled={!props.editing}\n                        onUpdate={(name) => setBusiness({...business, name})}\n                        value={business.name}\n                        validator={createValidator({\n                            handleValidation: ({valid}) => setValids({...valids, name: valid}),\n                            validations: [ValidationType.Required]\n                        })}\n                        required\n                    />\n                </Grid>\n                <Grid item xs={12} md={6} className={classes.inputContainer}>\n                    <AutocompleteMultiSelect\n                        loading={locationsLoading}\n                        disabled={!props.editing}\n                        inputLabel=\"Location(s)\"\n                        values={business.location}\n                        options={locations}\n                        onUpdate={(location) => setBusiness({...business, location})}\n                        validator={createValidator({\n                            handleValidation: ({valid}) => setValids({...valids, location: valid}),\n                            validations: [ValidationType.Required]\n                        })}\n                    />\n\n                </Grid>\n                <Grid item xs={12} md={6} className={classes.inputContainer}>\n                    <AutocompleteMultiSelect\n                        loading={categoriesLoading}\n                        disabled={!props.editing}\n                        inputLabel=\"Categories\"\n                        values={business.categories}\n                        options={categories}\n                        onUpdate={(categories) => setBusiness({...business, categories})}\n                        validator={createValidator({\n                            handleValidation: ({valid}) => setValids({...valids, categories: valid}),\n                            validations: [ValidationType.Required]\n                        })}\n                    />\n                </Grid>\n\n                <Grid item xs={12} md={6} className={classes.inputContainer}>\n                    <ValidatableInput\n                        label=\"Address\"\n                        disabled={!props.editing}\n                        onUpdate={(address) => setBusiness({...business, address})}\n                        value={business.address}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6} className={classes.inputContainer}>\n                    <AutocompleteMultiSelect\n                        loading={false}\n                        disabled={!props.editing}\n                        inputLabel=\"Email Addresses\"\n                        values={business.email}\n                        options={[]}\n                        onUpdate={(email) => setBusiness({...business, email})}\n                        validator={createValidator({\n                            handleValidation: ({valid}) => setValids({...valids, categories: valid}),\n                            validations: [ValidationType.Email]\n                        })}\n                    />\n                </Grid>\n                <Grid item xs={12} md={8} className={classes.inputContainer}>\n                    <ValidatableInput\n                        label=\"Description\"\n                        disabled={!props.editing}\n                        onUpdate={(description) => setBusiness({...business, description})}\n                        value={business.description}\n                        rows={4}\n                        validator={createValidator({\n                            handleValidation: ({valid}) => setValids({...valids, description: valid}),\n                            validations: [ValidationType.Required]\n                        })}\n                        multiline\n                        required\n                    />\n                </Grid>\n\n                <Grid item xs={12} md={4} className={classes.inputContainer}>\n                    <ValidatableInput\n                        label=\"Phone Number\"\n                        disabled={!props.editing}\n                        onUpdate={(phoneNumber) => setBusiness({...business, phoneNumber})}\n                        value={business.phoneNumber}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {Business, SocialMediaType} from \"../../types/Business\";\nimport {\n    Button,\n    FormControl,\n    IconButton,\n    InputLabel,\n    MenuItem,\n    Paper,\n    Select,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ValidatableInput from \"../ValidatableInput\";\nimport {CancelOutlined, Delete} from \"@material-ui/icons\";\nimport {createValidator, ValidationType} from \"../../util/InputValidator\";\n\nconst useStyles = makeStyles({\n    root: {\n        margin: '15px'\n    },\n    inputWrapper: {\n        maxWidth: '500px'\n    }\n})\n\nconst SocialMediaTypeObj = {\n    facebook: 'facebook',\n    twitter: 'twitter',\n    instagram: 'instagram',\n    pinterest: 'pinterest',\n    patreon: 'patreon',\n    soundcloud: 'soundcloud',\n    youtube: 'youtube',\n    bandcamp: 'bandcamp',\n    fanlink: 'fanlink',\n    linktree: 'linktree',\n    spotify: 'spotify',\n    appleMusic: 'appleMusic',\n    songLink: 'songLink',\n    meetup: 'meetup'\n}\n\ninterface AddSocialMediaRowProps {\n    bussiness: Partial<Business>\n    onSelect: (type: SocialMediaType) => unknown\n    onCancel: () => unknown\n    editing?: boolean;\n}\n\nconst AddSocialMediaRow = (props: AddSocialMediaRowProps) => {\n\n    return (\n        <TableRow>\n            <TableCell>\n                <FormControl style={{width: '100%'}}>\n                    <InputLabel color=\"secondary\" id=\"select-platform-label\">Select a Platform</InputLabel>\n                    <Select\n                        color=\"secondary\"\n                        labelId=\"select-platform-label\"\n                        value=''\n                        onChange={(event) => props.onSelect(event.target.value as SocialMediaType)}\n                    >\n                        {Object.keys(SocialMediaTypeObj).filter(type => typeof props.bussiness.socialMedia?.[type as SocialMediaType] === 'undefined').map(key => (\n                            <MenuItem value={key} key={key}>{key}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </TableCell>\n            <TableCell/>\n            <TableCell>\n                <div style={{display: 'flex', width: '100%'}} hidden={!props.editing}>\n                    <IconButton\n                        style={{\n                            marginLeft: 'auto',\n                            marginRight: '30px'\n                        }}\n                        onClick={props.onCancel}\n                    >\n                        <CancelOutlined\n                            style={{\n                                color: 'rgb(148 48 48)',\n                            }}\n                        />\n                    </IconButton>\n                </div>\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport interface BusinessSocialMediaProps {\n    business: Partial<Business>;\n    onUpdate?: (b: Partial<Business>) => unknown\n    onValidation?: (valid: boolean) => unknown\n    editing?: boolean\n}\n\nexport default (props: BusinessSocialMediaProps) => {\n    const classes = useStyles();\n\n    const [addingValue, setAddingValue] = React.useState(false);\n    const [valids, setValids] = React.useState<Record<string, boolean>>({});\n\n    React.useEffect(() => {\n        props.onValidation?.(Object.values(valids).reduce((prev, curr) => prev && curr, true));\n    }, [valids]);\n\n    return (\n        <div className={classes.root}>\n            <div style={{display: 'flex', alignItems: 'center'}}>\n                <div style={{marginLeft: 'auto', marginRight: '35px', marginBottom: '5px'}}>\n                    <Button onClick={() => setAddingValue(true)}>Add</Button>\n                </div>\n            </div>\n            <TableContainer component={Paper} style={{maxHeight: '75vh'}}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Social Media Type</TableCell>\n                            <TableCell>URL</TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {Object.keys(props.business.socialMedia || {}).map((type: string) => (\n                            <TableRow\n                                style={{cursor: 'default'}}\n                                key={type}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {type}\n                                </TableCell>\n                                <TableCell>\n                                    <div className={classes.inputWrapper}>\n                                        <ValidatableInput\n                                            required\n                                            disabled={!props.editing}\n                                            label={`${type} url`}\n                                            value={props.business.socialMedia?.[type as SocialMediaType]}\n                                            onUpdate={(value) =>\n                                                props.onUpdate?.({\n                                                    ...props.business,\n                                                    socialMedia: {\n                                                        ...props.business.socialMedia,\n                                                        [type]: value\n                                                    }\n                                                })}\n                                            validator={createValidator({\n                                                handleValidation: ({valid}) => setValids({...valids, [type]: valid}),\n                                                validations: [ValidationType.Required]\n                                            })}\n                                        />\n                                    </div>\n                                </TableCell>\n                                <TableCell>\n                                    {props.editing && (\n                                        <div style={{display: 'flex', width: '100%'}} hidden={!props.editing}>\n                                            <IconButton\n                                                style={{\n                                                    marginLeft: 'auto',\n                                                    marginRight: '30px'\n                                                }}\n                                                onClick={() => {\n                                                    const copy = {...props.business};\n                                                    delete props.business.socialMedia?.[type as SocialMediaType];\n                                                    const newValids = {...valids};\n                                                    delete newValids[type];\n                                                    setValids(newValids);\n                                                    props.onUpdate?.(copy);\n                                                }}\n                                            >\n                                                <Delete\n                                                    style={{\n                                                        color: 'rgb(148 48 48)',\n                                                    }}\n\n                                                />\n                                            </IconButton>\n\n                                        </div>)\n                                    }\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                        {addingValue && (\n                            <AddSocialMediaRow bussiness={props.business} onCancel={() => setAddingValue(false)} onSelect={(type) => {\n                                props.onUpdate?.({...props.business, socialMedia: {...props.business.socialMedia, [type]: ''}})\n                                setAddingValue(false);\n                            }}/>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {Business} from \"../../types/Business\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ValidatableInput from \"../ValidatableInput\";\n\nexport interface BusinessImagesProps {\n    business: Partial<Business>;\n    onUpdate?: (b: Partial<Business>) => unknown\n    onValidation?: (valid: boolean) => unknown\n    editing?: boolean\n}\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        display: 'grid',\n        alignItems: 'center',\n        gridRowGap: '30px',\n    },\n    inputWrapper: {\n        margin: '15px',\n        maxWidth: '500px'\n    },\n    image: {\n        maxWidth: '80vw',\n        marginTop: '20px'\n    }\n})\n\nexport default (props: BusinessImagesProps) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <div className={classes.inputWrapper}>\n                <ValidatableInput\n                    onUpdate={(logoUrl) => props.onUpdate?.({...props.business, logoUrl})}\n                    value={props.business.logoUrl}\n                    label=\"Logo URL\"\n\n                />\n                {props.business.logoUrl && (\n                    <img src={props.business.logoUrl} className={classes.image} alt=\"Logo\"/>)}\n            </div>\n            <div className={classes.inputWrapper}>\n                <ValidatableInput\n                    onUpdate={(bannerUrl) => props.onUpdate?.({...props.business, bannerUrl})}\n                    value={props.business.bannerUrl}\n                    label=\"Banner URL\"\n                />\n                {props.business.bannerUrl &&\n                    (<img src={props.business.bannerUrl} className={classes.image} alt=\"Banner\"/>)}\n            </div>\n        </div>\n    )\n}","import {ValueType} from \"../types/Business\";\n\nconst shouldDeleteCleanedValue = (value: unknown) => (Array.isArray(value) && value.length === 0) || (typeof value === 'object' && Object.keys(value as any).length === 0)\n\nexport const cleanEmptyStrings = (obj: any, shouldClean?: (val: string) => boolean) => {\n    const testString = (val: string) => val.trim().length === 0 || shouldClean?.(val);\n\n    if (Array.isArray(obj)) {\n        const badIndexes: number[] = [];\n        obj.forEach((value: unknown, index: number) => {\n            if (typeof value === 'string') {\n                if (testString(value)) {\n                    badIndexes.push(index);\n                } else {\n                    obj[index] = obj[index].trim();\n                }\n            } else {\n                cleanEmptyStrings(value, shouldClean);\n                if (shouldDeleteCleanedValue(value)) {\n                    badIndexes.push(index);\n                }\n            }\n        })\n        badIndexes.forEach(index => delete obj[index]);\n    } else if (typeof obj === 'object') {\n        for (const key of Object.keys(obj)) {\n            if (typeof obj[key] === 'string') {\n                if (testString(obj[key])) {\n                    delete obj[key];\n                } else {\n                    obj[key] = obj[key].trim();\n                }\n            } else {\n                cleanEmptyStrings(obj[key], shouldClean);\n                if (shouldDeleteCleanedValue(obj[key])) {\n                    delete obj[key];\n                }\n            }\n        }\n    }\n\n}\n\nexport const ValueTypeConst = {\n    String: 'string',\n    Array: 'array',\n    Number: 'number'\n}\n\nexport const assignValue = (object: any, value: any, path: string[], valueType: ValueType) => {\n    let index = 0;\n    let field = object\n    while (index < path.length - 1) {\n        field = field[path[index]];\n        index++;\n    }\n    let assignedValue = value;\n    if (assignedValue) {\n        switch (valueType) {\n            case ValueTypeConst.Array:\n                assignedValue = value.split(/,\\s*/);\n                break;\n            case ValueTypeConst.Number:\n                assignedValue = parseInt(value);\n                break;\n            case ValueTypeConst.String:\n                assignedValue = value;\n                break;\n        }\n    }\n    field[path[index]] = assignedValue;\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport BusinessInfo from \"../components/business/BusinessInfo\";\nimport BusinessSocialMedia from \"../components/business/BusinessSocialMedia\";\nimport {Business} from \"../types/Business\";\nimport BusinessImages from \"../components/business/BusinessImages\";\nimport {cleanEmptyStrings} from \"../util/GeneralUtils\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Backdrop,\n    CircularProgress,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    footer: {\n        width: '100%',\n        display: 'flex',\n        marginTop: 'auto'\n    },\n    buttonContainer: {\n        marginLeft: 'auto',\n        padding: '30px'\n    },\n    contentContainer: {},\n    backButton: {},\n    instructions: {},\n})\n\nconst getSteps = () => {\n    return [\n        'Basic Information',\n        'Social Media and Contact',\n        'Images'\n    ];\n}\n\nexport interface AddBusinessProps {\n    location?: {\n        state?: {\n            business?: Partial<Business>\n        }\n    }\n}\n\nexport default (props: AddBusinessProps) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const authContext = React.useContext(AuthContext);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [business, setBusiness] = React.useState(props.location?.state?.business || {});\n    const [loading, setLoading] = React.useState(false);\n    const [valid, setValid] = React.useState(false);\n    const [confirmDeleteDialogOpen, setConfirmDeleteDialogOpen] = React.useState(false);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        if (activeStep + 1 === steps.length) {\n            cleanEmptyStrings(business)\n            setLoading(true);\n            authContext.adminServices?.uploadBusinesses([business as Business])\n                .then(() => {\n                    setLoading(false);\n                    history.push('/businesses')\n                })\n                .catch(err => console.error(err));\n        } else {\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        if (activeStep === 0) {\n            history.goBack();\n        } else {\n            setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        }\n    };\n\n    const getContent = (index: number) => {\n        switch (index) {\n            case 0:\n                return (\n                    <BusinessInfo business={business} onUpdate={setBusiness} editing onValidation={setValid}/>\n                );\n            case 1:\n                return (\n                    <BusinessSocialMedia business={business} onUpdate={setBusiness} editing onValidation={setValid}/>\n                )\n            case 2:\n                return (\n                    <BusinessImages business={business} onUpdate={setBusiness} editing onValidation={setValid}/>\n                )\n            default:\n                return 'How did this happen'\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n            <div className={classes.contentContainer}>\n                {getContent(activeStep)}\n            </div>\n            <div className={classes.footer}>\n                {business.id && (\n                    <div style={{padding: '30px'}}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => setConfirmDeleteDialogOpen(true)}>\n                            Delete Entry\n                        </Button>\n                    </div>\n                )}\n                <div className={classes.buttonContainer}>\n                    <Button\n                        style={{marginRight: '10px'}}\n                        onClick={handleBack}\n                        className={classes.backButton}\n                    >\n                        {activeStep === 0 ? 'Cancel' : 'Back'}\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleNext} disabled={!valid}>\n                        {activeStep === steps.length - 1 ? 'Add Business' : 'Next'}\n                    </Button>\n                </div>\n            </div>\n\n            <Backdrop style={{zIndex: 0, color: '#fff'}} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n\n            <Dialog\n                open={confirmDeleteDialogOpen}\n                onClose={() => setConfirmDeleteDialogOpen(false)}\n            >\n                <DialogTitle>{\"Delete business entry?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Are you sure you'd like to delete this entry?\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirmDeleteDialogOpen(false)} color=\"secondary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => {\n                        if (business.id) {\n                            setConfirmDeleteDialogOpen(false);\n                            setLoading(true);\n                            authContext.adminServices?.deleteBusiness(business.id)\n                                .then(history.goBack)\n                                .catch(err => console.error(err));\n                        }\n                    }} color=\"secondary\" autoFocus>\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {\n    ArticleType,\n    BusinessNewsfeedEntry,\n    HtmlNewsfeedEntry,\n    NewsfeedEntry,\n    PodcastNewsfeedEntry\n} from \"../types/NewsfeedEntry\";\nimport {\n    Backdrop,\n    Button,\n    Card,\n    CircularProgress,\n    FormControl,\n    Grid,\n    InputLabel,\n    MenuItem,\n    Select, TextField\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ValidatableInput from \"../components/ValidatableInput\";\nimport {createValidator, ValidationType} from \"../util/InputValidator\";\nimport {DateTimePicker} from \"@material-ui/pickers\";\nimport {AuthContext} from \"../context/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\nimport {cleanEmptyStrings} from \"../util/GeneralUtils\";\nimport {Autocomplete} from \"@material-ui/lab\";\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '15px',\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    select: {\n        marginTop: '10px',\n        minWidth: '200px'\n    },\n    grid: {\n        width: '100%'\n    },\n    inputWrapper: {\n        marginLeft: '15px',\n        width: '100%'\n    }\n})\n\nexport interface AddNewsfeedEntryProps {\n    location?: {\n        state: {\n            entry?: Partial<NewsfeedEntry>\n        }\n    }\n}\n\nexport default (props: AddNewsfeedEntryProps) => {\n    const authContext = React.useContext(AuthContext);\n    const history = useHistory();\n    const classes = useStyles();\n    const [entry, setEntry] = React.useState({date: Date.now()} as NewsfeedEntry | HtmlNewsfeedEntry | BusinessNewsfeedEntry | PodcastNewsfeedEntry);\n    const [businessNames, setBusinessNames] = React.useState([] as string[]);\n    const [loading, setLoading] = React.useState(true);\n\n    const [valids, setValids] = React.useState({\n        type: {\n            valid: false\n        },\n        title: {\n            valid: false\n        }\n    } as any);\n\n    React.useEffect(() => {\n        const updatedValids = {\n            ...valids,\n            type: {\n                valid: !!entry.articleType\n            },\n            title: {\n                valid: !!entry.title\n            }\n        };\n        if (entry) {\n            switch (entry.articleType) {\n                case 'NEW_PODCAST':\n                    updatedValids.trackId = {valid: !!(entry as PodcastNewsfeedEntry).trackId};\n                    break;\n                case 'FEATURED_BUSINESS':\n                    updatedValids.selectedBusiness = {valid: !!(entry as BusinessNewsfeedEntry).serviceName};\n                    break;\n                case 'NATIVE_HTML':\n                case 'RAW_HTML':\n                    updatedValids.htmlContent = {valid: !!(entry as HtmlNewsfeedEntry).htmlContent};\n                    break;\n            }\n        }\n        console.log(updatedValids);\n        setValids(updatedValids);\n    }, [entry])\n\n    React.useEffect(() => {\n        const id = props.location?.state?.entry?.id;\n        authContext.adminServices?.fetchServices({useCache: true})\n            .then(s => setBusinessNames(s.map(b => b.name)))\n            .then(() => id ? authContext.adminServices?.fetchArticle(id) : Promise.resolve(entry))\n            .then(e => setEntry(e as any))\n            .catch(err => console.error(err))\n            .finally(() => setLoading(false))\n    }, [authContext.adminServices, props.location])\n\n    const submit = () => {\n        setLoading(true);\n        const toUpload = {...entry};\n        cleanEmptyStrings(toUpload);\n        authContext.adminServices?.uploadNewsfeedEntries([toUpload])\n            .then(() => history.push('/newsfeed'))\n            .catch(err => console.error(err))\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={10} alignItems=\"flex-end\" className={classes.grid}>\n                <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                    <FormControl>\n                        <InputLabel id=\"type-select-label\" color=\"secondary\">Type</InputLabel>\n                        <Select\n                            label=\"Article Type\"\n                            className={classes.select}\n                            labelId=\"type-select-label\"\n                            value={entry.articleType || ''}\n                            onChange={(e) => {\n                                const newValue = e.target.value;\n                                const newValids = {type: {valid: true}, title: valids.title} as any;\n                                switch (newValue) {\n                                    case 'NEW_PODCAST':\n                                        newValids.trackId = {valid: false};\n                                        break;\n                                    case 'FEATURED_BUSINESS':\n                                        newValids.selectedBusiness = {valid: false};\n                                        break;\n                                    case 'NATIVE_HTML':\n                                    case 'RAW_HTML':\n                                        newValids.htmlContent = {valid: false};\n                                        break;\n                                }\n                                setValids(newValids);\n                                setEntry({...entry, articleType: e.target.value as ArticleType})\n                            }}\n                        >\n                            <MenuItem value=\"NEW_PODCAST\">New Podcast</MenuItem>\n                            <MenuItem value=\"FEATURED_BUSINESS\">Featured Business</MenuItem>\n                            <MenuItem value=\"NATIVE_HTML\">Native HTML</MenuItem>\n                            <MenuItem value=\"RAW_HTML\">Raw HTML</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                    <DateTimePicker\n                        required\n                        value={entry.date}\n                        onChange={(date) => setEntry({...entry, date: (date as Date).getTime()})}\n                        label=\"Article Date\"\n                        showTodayButton\n                    />\n                </Grid>\n                <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                    <ValidatableInput\n                        label=\"Title\"\n                        value={entry.title}\n                        onUpdate={(title) => setEntry({...entry, title})}\n                        validator={createValidator({\n                            handleValidation: (v) => setValids({...valids, title: v}),\n                            validations: [ValidationType.Required]\n                        })}\n                        required\n                    />\n                </Grid>\n                <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                    <ValidatableInput\n                        label=\"Subtitle\"\n                        value={entry.subtitle}\n                        onUpdate={(subtitle) => setEntry({...entry, subtitle})}\n                    />\n                </Grid>\n                <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                    <ValidatableInput\n                        label=\"Share URL\"\n                        value={entry.shareUrl}\n                        onUpdate={(shareUrl) => setEntry({...entry, shareUrl})}\n                    />\n                </Grid>\n                <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                    <ValidatableInput\n                        label=\"Image URL\"\n                        value={entry.imageUrl}\n                        onUpdate={(imageUrl) => setEntry({...entry, imageUrl})}\n                    />\n                </Grid>\n                <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                    {entry.imageUrl && (\n                        <img src={entry.imageUrl} style={{maxWidth: '300px', maxHeight: '300px'}}/>)}\n                </Grid>\n\n                {(entry.articleType === 'FEATURED_BUSINESS') && (\n                    <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                        <Autocomplete\n                            value={(entry as BusinessNewsfeedEntry)?.serviceName || null}\n                            onChange={(ev, newValue) => {\n                                setValids({\n                                    ...valids,\n                                    selectedBusiness: {valid: newValue !== null && newValue?.length > 0}\n                                })\n                                setEntry({...entry, serviceName: newValue as string})\n                            }}\n                            options={businessNames}\n                            getOptionLabel={(option) => option}\n                            renderInput={(params) =>\n                                <TextField {...params} label=\"Business\" variant=\"outlined\"\n                                           helperText={!valids.selectedBusiness?.valid && 'Required field'}/>\n                            }\n                        />\n                    </Grid>\n                )}\n                {(entry.articleType === 'RAW_HTML' || entry.articleType === 'NATIVE_HTML' || entry.articleType === 'FEATURED_BUSINESS') && (\n                    <>\n                        <Grid item xs={12} lg={12} className={classes.inputWrapper}>\n                            <ValidatableInput\n                                multiline\n                                rows={5}\n                                label=\"HTML Content\"\n                                value={(entry as HtmlNewsfeedEntry).htmlContent}\n                                onUpdate={(htmlContent) => setEntry({...entry, htmlContent})}\n                                validator={entry.articleType === 'FEATURED_BUSINESS' ? undefined : createValidator({\n                                    handleValidation: (v) => setValids({...valids, htmlContent: v}),\n                                    validations: [ValidationType.Required]\n                                })}\n                                required={entry.articleType !== 'FEATURED_BUSINESS'}\n                            />\n                        </Grid>\n                        <Grid item xs={12} lg={12} className={classes.inputWrapper}>\n                            {(entry as HtmlNewsfeedEntry).htmlContent && (\n                                <Card\n                                    dangerouslySetInnerHTML={{__html: (entry as HtmlNewsfeedEntry).htmlContent}}\n                                />\n                            )}\n                        </Grid>\n                    </>\n                )}\n                {(entry.articleType === 'NEW_PODCAST') && (\n                    <Grid item xs={12} lg={6} className={classes.inputWrapper}>\n                        <ValidatableInput\n                            label=\"Podcast Track ID\"\n                            value={(entry as PodcastNewsfeedEntry).trackId}\n                            onUpdate={(trackId) => setEntry({...entry, trackId})}\n                            validator={createValidator({\n                                handleValidation: (v) => setValids({...valids, trackId: v}),\n                                validations: [ValidationType.Required]\n                            })}\n                            required\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            <div style={{display: 'flex', marginLeft: 'auto', marginTop: 'auto', padding: '30px'}}>\n                <Button onClick={() => history.goBack()} variant=\"outlined\" color=\"secondary\">Cancel</Button>\n                <Button onClick={submit} variant=\"outlined\" color=\"secondary\" style={{marginLeft: '20px'}}\n                        disabled={Object.values(valids).some((v: any) => !v.valid)}>Upload</Button>\n            </div>\n            <Backdrop style={{zIndex: 0, color: '#fff'}} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n        </div>\n    )\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    AppBar, Divider,\n    List,\n    ListItem, ListItemText,\n    Paper,\n    Tab,\n    Typography\n} from \"@material-ui/core\";\nimport {ExpandMore} from '@material-ui/icons';\nimport {TabContext, TabList, TabPanel} from \"@material-ui/lab\";\nimport {useDropzone} from 'react-dropzone'\nimport {StyleConstants} from \"../../util/Themes\";\n\nexport interface UploadWordpressExportProps {\n    setSelectedFile: (file: any) => unknown,\n    selectedFile: any;\n    handleNext: () => Promise<unknown>;\n}\n\nexport interface DragAndDropProps {\n    handleDrop: (files: any[]) => any;\n    selectedFile: any;\n}\n\nconst DragAndDrop = (props: DragAndDropProps) => {\n\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop: props.handleDrop})\n\n        return (\n            <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                {\n                    <Paper style={{\n                        height: '500px',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        opacity: isDragActive ? 0.5 : 1\n                    }}>\n                        {props.selectedFile ? (\n                            <>\n                                <div><h3>Uploading {props.selectedFile.name}</h3></div>\n                                <div><h4>Press next to continue</h4></div>\n                            </>\n                        ) : (\n                            <>\n                                {isDragActive ? 'Drop files here to upload' : 'Drag files here or click to select'}\n                            </>\n                        )}\n                    </Paper>\n                }\n            </div>\n        )\n    }\n;\n\nexport default (props: UploadWordpressExportProps) => {\n    const [selectedTab, setSelectedTab] = React.useState('0');\n\n    const handleSelect = (file: any) => {\n        props.setSelectedFile(file);\n    }\n\n    return (\n        <div style={{margin: '30px'}}>\n            <TabContext value={selectedTab.toString()}>\n                <AppBar position=\"static\">\n                    <TabList onChange={(ev, value) => setSelectedTab(value)} centered>\n                        <Tab label=\"Upload from Computer\" value=\"0\"/>\n                    </TabList>\n                </AppBar>\n                <TabPanel value=\"0\">\n                    <Accordion style={{marginBottom: '10px', backgroundColor: StyleConstants.Colors.cardBackground}}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMore/>}\n                            aria-controls=\"panel1a-content\"\n                            id=\"panel1a-header\"\n                        >\n                            <Typography style={{fontSize: '20px'}}>Export Instructions</Typography>\n                        </AccordionSummary>\n                        <Divider style={{backgroundColor: StyleConstants.Colors.gray}}/>\n                        <AccordionDetails>\n                            <div>\n                                <List>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - Navigate to the <a style={{color: StyleConstants.Colors.lightAccent}} href={\"https://www.blackownedmaine.com/wp-admin\"}>WordPress admin site</a>\n                                        </ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - Click on the <b>Black Owned Maine</b> directory link in the side bar\n                                        </ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - Click the <b>Export</b> button at the top of the page\n                                        </ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - Leave all fields selected and click <b>Next</b>.\n                                        </ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - <b style={{color: StyleConstants.Colors.lightRed}}>!!Important!!</b> Change all the dropdown options that are set to <b>Slug</b> to <b>Title</b>\n                                        </ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - Click <b>Next.</b>\n                                        </ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - Select <b>Export Now</b> to begin the export process.\n                                        </ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemText>\n                                            - Once the export is complete and downloaded, extract the downloaded zip file and drag and drop the <b>.csv</b> file below.\n                                        </ListItemText>\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                    <DragAndDrop selectedFile={props.selectedFile} handleDrop={(files) => {\n                        if (files.length === 1) {\n                            handleSelect(files[0]);\n                        } else {\n                            // Alert user to only upload a single ZIP file\n                        }\n                    }}/>\n                </TabPanel>\n            </TabContext>\n        </div>\n    )\n}","import React from \"react\";\nimport {Business, ValidationError} from \"../../types/Business\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Button,\n    Card,\n    CardContent,\n    Typography, useTheme\n} from \"@material-ui/core\";\nimport {ExpandMore} from '@material-ui/icons';\nimport ValidatableInput from \"../ValidatableInput\";\nimport AutocompleteMultiSelect from \"../AutocompleteMultiSelect\";\nimport {AuthContext} from \"../../context/AuthContext\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {StyleConstants} from \"../../util/Themes\";\n\nexport interface ErrorCorrectionProps {\n    name?: string;\n    details?: Partial<Business>;\n    value?: string;\n    onSave: () => unknown;\n    onReset: () => unknown;\n    onUpdate: (value: string | undefined, index: number) => unknown;\n    errors?: ValidationError[];\n}\n\ninterface ContextAwareInputProps {\n    err: ValidationError;\n    onUpdate: (value?: string) => unknown\n}\n\nconst CategoriesInput = (props: ContextAwareInputProps) => {\n    const authContext = React.useContext(AuthContext);\n    const [loading, setLoading] = React.useState(true);\n    const [categories, setCategories] = React.useState<string[]>([]);\n\n    React.useEffect(() => {\n        authContext.adminServices?.fetchCategories()\n            .then(cats => {\n                setCategories(cats || []);\n                setLoading(false);\n            })\n    }, []);\n\n    const values = (props.err.context.value as string)?.split(/,\\s*/);\n    return (\n        <AutocompleteMultiSelect\n            loading={loading}\n            inputLabel={props.err.path.join('.')}\n            values={values}\n            options={categories}\n            helperText={props.err.message}\n            onUpdate={(categories) => {\n                props.onUpdate(categories.length > 0 ? categories.join(', ') : undefined);\n            }}\n        />\n    )\n}\n\n\nconst ContextAwareInput = ({err, onUpdate}: ContextAwareInputProps) => {\n    if (err.path.join('.').includes('categories')) {\n        return (\n            <CategoriesInput\n                err={err}\n                onUpdate={onUpdate}\n            />\n        )\n    } else {\n        return (\n            <ValidatableInput\n                value={err.context.value}\n                label={err.path.join('.')}\n                helperText={err.message}\n                onUpdate={onUpdate}\n            />\n        )\n    }\n}\n\nconst useStyles = makeStyles(() => ({\n    detailsHeader: {\n        fontSize: '20px'\n    },\n    detailLabel: {\n        marginTop: '8px',\n        fontSize: '12px',\n        color: StyleConstants.Colors.lightAccent\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}));\n\nexport default (props: ErrorCorrectionProps) => {\n    const [isEdited, setIsEdited] = React.useState();\n    const classes = useStyles(useTheme());\n\n    return (\n        <Card elevation={3} style={{padding: '30px', margin: '30px'}}>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMore/>}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.detailsHeader}>\n                        {props.name}\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <div className={classes.details}>\n                        {props.details?.description && (\n                            <>\n                                <Typography className={classes.detailLabel}>\n                                    Description\n                                </Typography>\n                                <Typography>\n                                    {props.details?.description}\n                                </Typography>\n                            </>\n                        )}\n                        {props.details?.address && (\n                            <>\n                                <Typography className={classes.detailLabel}>\n                                    Address\n                                </Typography>\n                                <Typography>\n                                    {props.details?.address}\n                                </Typography>\n                            </>\n                        )}\n                    </div>\n                </AccordionDetails>\n            </Accordion>\n            <CardContent>\n                <div style={{display: 'flex', flexDirection: 'column'}}>\n                    {props.errors?.map((err, index) => (\n                        <div style={{marginTop: '15px', marginBottom: '15px'}} key={`${index}`}>\n                            <ContextAwareInput\n                                err={err}\n                                onUpdate={(value) => {\n                                    setIsEdited(!!value && value.trim().length > 0);\n                                    props.onUpdate(value, index);\n                                }}\n                            />\n                        </div>\n                    ))}\n                </div>\n                <div style={{display: 'flex', width: '100%'}}>\n\n                    <Button style={{marginLeft: 'auto'}} variant=\"outlined\" onClick={props.onReset}>\n                        Reset\n                    </Button>\n                    <Button style={{marginLeft: '15px'}} disabled={!isEdited} variant=\"outlined\" onClick={props.onSave}>\n                        Save\n                    </Button>\n                </div>\n            </CardContent>\n\n        </Card>\n    )\n}","import React from \"react\";\nimport {UnresolvedBusiness, ValidationError} from \"../../types/Business\";\nimport {Card, CardContent, CardHeader, Divider, Paper, Typography} from \"@material-ui/core\";\nimport ValidatableInput from \"../ValidatableInput\";\n\nexport interface ErrorCorrectionProps {\n    count?: number\n    unresolvedCount?: number\n}\n\nexport default (props: ErrorCorrectionProps) => {\n    return (\n        <Card elevation={3} style={{padding: '30px', margin: '30px'}}>\n            <CardHeader\n                title={\"Confirm Upload\"}\n            />\n            <Divider/>\n            <CardContent style={{display: 'flex', flexDirection: 'column'}}>\n                <Typography>\n                    Confirm upload of {props.count} businesses?\n                </Typography>\n                {props.unresolvedCount && props.unresolvedCount > 0 ? (\n                    <Typography style={{marginTop: '15px'}}>\n                        Note that there are {props.unresolvedCount} businesses with unresolved errors. If you continue,\n                        these businesses will not be included in the upload, and will not be visible within the app.\n                    </Typography>\n                ) : <></>}\n            </CardContent>\n\n        </Card>\n    )\n}","import React, {CSSProperties} from \"react\";\n\nexport interface EllipsizedTextContainerProps {\n    lineCount: number\n    children: any\n    containerStyle?: CSSProperties\n}\n\nexport default (props: EllipsizedTextContainerProps) => (\n    <div style={{\n        WebkitLineClamp: props.lineCount,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        WebkitBoxOrient: 'vertical',\n        display: '-webkit-box',\n        ...props.containerStyle\n    }}>\n        {props.children}\n    </div>\n)","import React from 'react'\nimport {useDrop} from 'react-dnd'\nimport {Card, CardContent, IconButton, Typography} from \"@material-ui/core\";\nimport {DropSource} from \"./FieldMapper\";\nimport {Cancel} from \"@material-ui/icons\";\nimport {StyleConstants} from \"../util/Themes\";\nimport EllipsizedTextContainer from \"../components/EllipsizedTextContainer\";\n\nexport interface DustbinProps {\n    accept: string[]\n    lastDroppedItem?: DropSource\n    onDrop: (item: any) => void\n    onRemove: (item: { sourceKey: string, targetKey: string }) => void\n    fieldName: string;\n}\n\nexport const MappingTarget: React.FC<DustbinProps> = ({\n                                                          onRemove,\n                                                          fieldName,\n                                                          accept,\n                                                          lastDroppedItem,\n                                                          onDrop,\n                                                      }) => {\n    const [{isOver, canDrop}, drop] = useDrop({\n        accept,\n        drop: onDrop,\n        canDrop: () => !lastDroppedItem,\n        collect: (monitor) => {\n            return ({\n                isOver: monitor.isOver(),\n                canDrop: monitor.canDrop()\n            })\n        },\n    })\n\n    return (\n        <Card ref={drop} style={{backgroundColor: isOver && canDrop ? '#4c4c4c' : '#222'}}>\n            <CardContent>\n                <div style={{display: 'flex', alignItems: 'center'}}>\n\n                    <Card style={{flex: 1}}>\n                        <CardContent>\n                            <div style={{display: 'flex'}}>\n                                <div>\n                                    <Typography>\n                                        {lastDroppedItem?.sourceKey}\n                                    </Typography>\n                                    <EllipsizedTextContainer lineCount={2} containerStyle={{color: '#989898', fontSize: 13}}>\n                                        {lastDroppedItem?.exampleSourceValue}\n                                    </EllipsizedTextContainer>\n                                </div>\n                                <div style={{alignSelf: 'center', marginLeft: 'auto'}}>\n                                    <IconButton style={{opacity: lastDroppedItem ? 1 : 0}}\n                                                disabled={!lastDroppedItem}\n                                                onClick={() => lastDroppedItem && onRemove({\n                                                    sourceKey: lastDroppedItem?.sourceKey,\n                                                    targetKey: fieldName\n                                                })}>\n                                        <Cancel style={{color: StyleConstants.Colors.lightRed}}/>\n                                    </IconButton>\n                                </div>\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <span style={{marginLeft: '20px', marginRight: '20px'}}>&#8594;</span>\n                    <Card style={{flex: 1}}>\n                        <CardContent>\n                            <Typography>\n                                {fieldName}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </div>\n            </CardContent>\n        </Card>\n    )\n}\n","import React from 'react'\nimport {useDrag} from 'react-dnd'\nimport {\n    Card,\n    CardContent,\n    Typography\n} from \"@material-ui/core\";\nimport EllipsizedTextContainer from \"../components/EllipsizedTextContainer\";\nimport {DropSource} from \"./FieldMapper\";\n\nexport interface BoxProps {\n    isDropped: boolean\n    dropSource: DropSource\n}\n\nexport const MappingSource: React.FC<BoxProps> = ({dropSource, isDropped}) => {\n    const [{opacity}, drag] = useDrag({\n        item: dropSource,\n        collect: (monitor) => ({\n            opacity: monitor.isDragging() ? 0.4 : 1,\n        }),\n    })\n    const [hovering, setHovering] = React.useState(false);\n\n    return (\n        <Card ref={drag} style={{opacity, margin: '10px', backgroundColor: hovering ? '#4c4c4c' : '#222', minWidth: 0}}\n              onMouseEnter={() => setHovering(true)} onMouseLeave={() => setHovering(false)}>\n            <CardContent style={{minWidth: 0}}>\n                <div style={{minWidth: 0}}>\n                    <Typography>\n                        {dropSource.sourceKey}\n                    </Typography>\n                    <EllipsizedTextContainer lineCount={2} containerStyle={{color: '#989898', fontSize: 13, }}>\n                        {dropSource.exampleSourceValue}\n                    </EllipsizedTextContainer>\n                </div>\n            </CardContent>\n        </Card>\n    )\n}\n","import React, {useCallback} from 'react'\nimport {MappingTarget} from './MappingTarget'\nimport {MappingSource} from './MappingSource'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\nimport {DndProvider} from \"react-dnd\";\n\nexport interface DustbinSpec {\n    accepts: string[]\n    lastDroppedItem: any\n}\n\nexport interface BoxSpec {\n    name: string\n    type: string\n}\n\nexport interface ContainerState {\n    droppedBoxNames: string[]\n    dustbins: DustbinSpec[]\n    boxes: BoxSpec[]\n}\n\nexport interface FieldMapperProps {\n    providedSources: Record<string, any>\n    onMappingChange: (mapping: Record<string, string>) => void\n    next: () => unknown\n}\n\nexport interface DropSource {\n    sourceKey: string;\n    exampleSourceValue?: string;\n    type: string;\n}\n\nexport const SOURCE_TYPE = 'business-mapper-source';\n\nexport const DEFAULT_MAPPING = Object.freeze({\n    'directory_category': 'categories[]',\n    'post_content': 'description',\n    'location_address__city': 'location[]',\n    'location_address__address': 'address',\n    'location_address__lat': 'coordinates.latitude',\n    'location_address__lng': 'coordinates.longitude',\n    'post_title': 'name',\n    'field_email': 'email[]',\n    'field_phone': 'phoneNumber',\n    'field_social_accounts__facebook': 'socialMedia.facebook',\n    'field_social_accounts__flickr': 'socialMedia.flickr',\n    'field_social_accounts__googleplus': 'socialMedia.googlePlus',\n    'field_social_accounts__instagram': 'socialMedia.instagram',\n    'field_social_accounts__linkedin': 'socialMedia.linkedIn',\n    'field_social_accounts__pinterest': 'socialMedia.pinterest',\n    'field_social_accounts__rss': 'socialMedia.rss',\n    'field_social_accounts__tumblr': 'socialMedia.tumblr',\n    'field_social_accounts__twitter': 'socialMedia.twitter',\n    'field_social_accounts__youtube': 'socialMedia.youtube',\n    'field_website': 'website'\n});\n\nconst TARGETS = Object.values(DEFAULT_MAPPING);\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        margin: '15px'\n    },\n    button: {\n        margin: '15px'\n    },\n    gridContainer: {\n        margin: '50px',\n        display: 'grid',\n        gridTemplateColumns: '1fr 3fr',\n        width: '85%',\n        gridColumnGap: '100px',\n        gridRowGap: '15px'\n    },\n    gridHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    gridHeader: {\n        color: 'white',\n        fontSize: 26\n    },\n    gridLeft: {\n        gridColumnStart: '1'\n    },\n    gridRight: {\n        gridColumnStart: '2'\n    }\n}))\n\nconst mapTargetsToProvidedSources = (providedSources: Record<string, any>): Record<string, DropSource> => {\n    // {'socialMedia.facebook': {sourceKey: 'field_social_acconts__facebook', ...}\n    const mappedSources: Record<string, DropSource> = {};\n\n    // Check each key of the provided source object\n    for (const sourceKey of Object.keys(providedSources)) {\n        // Do we have a default mapping?\n        if (typeof (DEFAULT_MAPPING as any)[sourceKey] !== 'undefined') {\n            // Build the mapping\n            mappedSources[(DEFAULT_MAPPING as any)[sourceKey]] = {\n                sourceKey: sourceKey,\n                exampleSourceValue: providedSources[sourceKey],\n                type: SOURCE_TYPE\n            }\n        }\n    }\n    return mappedSources;\n}\n\nexport default (props: FieldMapperProps) => {\n    // mappedTargets - an array, where the index corresponds to the target's provided index, and the value is the source field which has been mapped to it\n    const [mappedTargets, setMappedTargets] = React.useState<Record<string, DropSource>>(mapTargetsToProvidedSources(props.providedSources));\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const classes = useStyles(useTheme());\n\n    const isDropped = useCallback((sourceName: string) => {\n        return !!Object.values(mappedTargets).find((t) => t.sourceKey === sourceName);\n    }, [mappedTargets])\n\n    const handleDrop = useCallback(\n        (targetKey: string, item: DropSource) => {\n            // I would have thought this would not be called when canDrop in the target is false, but apparently\n            // it still is, so let's check here to make sure the source has not already been mapped\n            if (!isDropped(item.sourceKey)) {\n                const updated = {...mappedTargets};\n                updated[targetKey] = item;\n                setMappedTargets(updated);\n            }\n        },\n        [isDropped, mappedTargets],\n    )\n\n    React.useEffect(() => {\n        if (Object.keys(mappedTargets).length === Object.keys(DEFAULT_MAPPING).length) {\n            setDialogOpen(true);\n        }\n    }, []);\n\n    React.useEffect(useCallback(() => {\n        const reversedMapping: Record<string, string> = {};\n        for (const target of Object.keys(mappedTargets)) {\n            reversedMapping[mappedTargets[target].sourceKey] = target;\n        }\n        props.onMappingChange(reversedMapping)\n    }, [mappedTargets, props]), [mappedTargets]);\n\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <div className={classes.root}>\n\n                <Button className={classes.button} variant=\"outlined\" onClick={() => {\n                    setMappedTargets({});\n                }}>\n                    Reset\n                </Button>\n\n                <Button className={classes.button} variant=\"outlined\" onClick={() => {\n                    setMappedTargets(mapTargetsToProvidedSources(props.providedSources));\n                }}>\n                    Auto-Map\n                </Button>\n\n                <div className={classes.gridContainer}>\n                    <div className={classes.gridHeaderContainer}>\n                        <Typography className={classes.gridHeader}>Source field name from CSV</Typography>\n                    </div>\n                    <div className={classes.gridHeaderContainer}>\n                        <Typography className={classes.gridHeader}>Target field name in App</Typography>\n                    </div>\n                    {Object.keys(props.providedSources)\n                        .filter(key => !isDropped(key))\n                        .map((key, index) => (\n                            <div className={classes.gridLeft} style={{gridRow: index + 2}} key={index}>\n                                <MappingSource\n                                    dropSource={{\n                                        sourceKey: key,\n                                        exampleSourceValue: props.providedSources[key],\n                                        type: SOURCE_TYPE\n                                    }}\n                                    isDropped={isDropped(key)}\n                                />\n                            </div>\n                        ))}\n\n                    {Object.values(DEFAULT_MAPPING)\n                        .sort((keyOne, keyTwo) => {\n                            return ((mappedTargets[keyOne] && mappedTargets[keyTwo]) || (!mappedTargets[keyOne] && !mappedTargets[keyTwo]))\n                                ? TARGETS.indexOf(keyOne) - TARGETS.indexOf(keyTwo)\n                                : mappedTargets[keyOne] && !mappedTargets[keyTwo]\n                                    ? 1\n                                    : -1\n                        })\n                        .map((targetKey, index) => (\n                            <div className={classes.gridRight} style={{gridRow: index + 2}} key={index}>\n                                <MappingTarget\n                                    fieldName={targetKey}\n                                    accept={[SOURCE_TYPE]}\n                                    lastDroppedItem={mappedTargets[targetKey]}\n                                    onDrop={(item) => handleDrop(targetKey, item)}\n                                    onRemove={({targetKey}) => {\n                                        const targets = {...mappedTargets};\n                                        delete targets[targetKey];\n                                        setMappedTargets(targets);\n                                    }}\n                                />\n                            </div>\n                        ))}\n                </div>\n            </div>\n            <Dialog\n                open={dialogOpen}\n                onClose={() => setDialogOpen(false)}\n            >\n                <DialogTitle>{\"Accept default mapping?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Would you like to use the default field mapping? If you choose not to, you must ensure that\n                        all of the required fields in the mobile app are mapped to a field in the provided CSV export.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setDialogOpen(false)} color=\"secondary\">\n                        No\n                    </Button>\n                    <Button onClick={() => {\n                        setDialogOpen(false);\n                        props.next();\n                    }} color=\"secondary\" autoFocus>\n                        Yes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </DndProvider>\n    )\n}\n","import {cleanEmptyStrings} from \"./GeneralUtils\";\n\nexport const sanitizeBusiness = (business: any): any => {\n    const sanitized = {...business};\n    // Remove empty strings and those which are populated with 'none'\n    cleanEmptyStrings(sanitized, (str) => str.toLowerCase().trim() === 'none');\n    // Check the categories\n    sanitized.categories = sanitized.categories\n        ?.flatMap((category: string) => category.split(';'))\n        .map((category: string) => category.replace(/-/g, ' '))\n        .map((category: string) => category.replace(/\\w\\S*/g, (txt: string) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()).trim())\n    // Check the emails - could be a comma-separated list\n    return sanitized;\n}\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport AuthenticatedRoute from './route/AuthenticatedRoute';\nimport UnauthenticatedRoute from './route/UnauthenticatedRoute';\nimport Login from \"./screens/Login\";\nimport Business from \"./screens/Businesses\";\nimport Users from \"./screens/Users\";\nimport Newsfeed from \"./screens/Newsfeed\";\nimport AddBusiness from \"./screens/AddBusiness\";\nimport AddNewsfeedEntry from \"./screens/AddNewsfeedEntry\";\nimport SyncBusinesses from \"./screens/SyncBusinesses\";\n\nexport default () =>\n    <Switch>\n        <UnauthenticatedRoute path=\"/login\" exact component={Login}/>\n        <AuthenticatedRoute path=\"/businesses\" exact component={Business}/>\n        <AuthenticatedRoute path=\"/sync\" exact component={SyncBusinesses}/>\n        <AuthenticatedRoute path=\"/addBusiness\" exact component={AddBusiness}/>\n        <AuthenticatedRoute path=\"/users\" exact component={Users}/>\n        <AuthenticatedRoute path=\"/newsfeed\" exact component={Newsfeed}/>\n        <AuthenticatedRoute path=\"/addNewsfeed\" exact component={AddNewsfeedEntry}/>\n        <Route component={() => <Redirect to='/businesses'/>}/>\n    </Switch>;\n","import React from \"react\";\nimport {AppBar, Button, Grid, Toolbar, Typography} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHistory} from 'react-router-dom';\n\nimport {AuthContext} from \"../context/AuthContext\";\n\nconst useStyles = makeStyles({\n    root: {\n        // flexGrow: 1,\n    },\n    title: {\n        marginRight: '50px'\n    },\n    button: {\n        marginLeft: '10px'\n    }\n});\n\nexport default () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const authContext = React.useContext(AuthContext);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/*<Typography variant=\"h5\" className={classes.title}>*/}\n                    {/*    Black Owned Maine*/}\n                    {/*</Typography>*/}\n                    {authContext.authenticated && (\n                        <Grid style={{width: '100%'}} container>\n                            <Grid item xs=\"auto\">\n                                <Button\n                                    color=\"secondary\"\n                                    className={classes.button}\n                                    onClick={() => history.push('/businesses')}\n                                >\n                                    Businesses\n                                </Button>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Button\n                                    color=\"secondary\"\n                                    className={classes.button}\n                                    onClick={() => history.push('/newsfeed')}\n                                >\n                                    Newsfeed\n                                </Button>\n                            </Grid>\n                            <Grid item xs=\"auto\">\n                                <Button\n                                    color=\"secondary\"\n                                    className={classes.button}\n                                    onClick={() => history.push('/users')}\n                                >\n                                    Users\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    )}\n                    <Button\n                        variant=\"outlined\"\n                        disabled={!authContext.authenticated || authContext.authorizing}\n                        onClick={authContext.signOut}\n                        style={{marginLeft: 'auto'}}\n                    >\n                        Logout\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n};\n","import React from 'react';\nimport {ThemeProvider, createMuiTheme} from '@material-ui/core';\nimport AuthProvider, {AuthContext} from './context/AuthContext';\nimport Routes from \"./Routes\";\nimport {indigo, red} from \"@material-ui/core/colors\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport Header from \"./components/Header\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\n\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#2b2828',\n            light: 'rgb(81, 91, 95)',\n            dark: 'rgb(26, 35, 39)',\n            contrastText: '#ffffff',\n        },\n        secondary: {\n            main: '#FFB74D',\n            light: 'rgb(255, 197, 112)',\n            dark: 'rgb(200, 147, 89)',\n            contrastText: 'rgba(0, 0, 0, 0.87)',\n        },\n        error: {\n            main: red.A400,\n        },\n    }\n})\n\nconst useStyles = makeStyles({\n    app: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    }\n})\n\n\nfunction App() {\n    const classes = useStyles();\n    return (\n        <ThemeProvider theme={theme}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <AuthProvider>\n                    <AuthContext.Consumer>\n                        {() => (\n                            <div className={classes.app}>\n                                <Header/>\n                                <Routes/>\n                            </div>\n                        )}\n                    </AuthContext.Consumer>\n                </AuthProvider>\n            </MuiPickersUtilsProvider>\n        </ThemeProvider>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}